2023/10/31 20:40:50 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.16 (default, Mar  2 2023, 03:21:46) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 1451830262
    GPU 0: NVIDIA TITAN RTX
    CUDA_HOME: /usr/local/cuda-10.2
    NVCC: Cuda compilation tools, release 10.2, V10.2.8
    GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
    PyTorch: 2.0.0
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.0
    OpenCV: 4.7.0
    MMEngine: 0.9.0

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1451830262
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/10/31 20:40:51 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=False)
backend_args = None
data_root = '/mnt/bee9bc2f-b897-4648-b8c4-909715332cb4/linshaoqing/data/datasets/DOTA1024/'
dataset_type = 'DOTADataset'
default_hooks = dict(
    checkpoint=dict(interval=1, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
model = dict(
    backbone=dict(
        depth=50,
        frozen_stages=1,
        init_cfg=dict(checkpoint='torchvision://resnet50', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        style='pytorch',
        type='ResNet'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=5,
        out_channels=256,
        type='FPN'),
    roi_head=dict(
        bbox_head=dict(
            bbox_coder=dict(
                target_means=[
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
                target_stds=[
                    0.1,
                    0.1,
                    0.2,
                    0.2,
                ],
                type='DeltaXYWHBBoxCoder'),
            fc_out_channels=1024,
            in_channels=256,
            loss_bbox=dict(beta=1.0, loss_weight=1.0, type='SmoothL1Loss'),
            loss_cls=dict(
                loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
            num_classes=15,
            reg_class_agnostic=False,
            roi_feat_size=7,
            type='Shared2FCBBoxHead'),
        bbox_roi_extractor=dict(
            featmap_strides=[
                4,
                8,
                16,
                32,
            ],
            out_channels=256,
            roi_layer=dict(output_size=7, sampling_ratio=0, type='RoIAlign'),
            type='SingleRoIExtractor'),
        type='StandardRoIHead'),
    rpn_head=dict(
        anchor_generator=dict(
            ratios=[
                0.5,
                1.0,
                2.0,
            ],
            scales=[
                8,
            ],
            strides=[
                4,
                8,
                16,
                32,
                64,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                1.0,
                1.0,
                1.0,
                1.0,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=256,
        in_channels=256,
        loss_bbox=dict(
            beta=0.1111111111111111, loss_weight=1.0, type='SmoothL1Loss'),
        loss_cls=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=True),
        type='RPNHead'),
    test_cfg=dict(
        rcnn=dict(
            max_per_img=2000,
            nms=dict(iou_thr=0.5, type='nms'),
            score_thr=0.05),
        rpn=dict(
            max_per_img=2000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_across_levels=False,
            nms_post=2000,
            nms_pre=2000)),
    train_cfg=dict(
        rcnn=dict(
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=False,
                min_pos_iou=0.5,
                neg_iou_thr=0.5,
                pos_iou_thr=0.5,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=True,
                neg_pos_ub=-1,
                num=512,
                pos_fraction=0.25,
                type='RandomSampler')),
        rpn=dict(
            allowed_border=0,
            assigner=dict(
                ignore_iof_thr=-1,
                min_pos_iou=0.3,
                neg_iou_thr=0.3,
                pos_iou_thr=0.7,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=False,
                neg_pos_ub=-1,
                num=256,
                pos_fraction=0.5,
                type='RandomSampler')),
        rpn_proposal=dict(
            max_per_img=2000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_across_levels=False,
            nms_post=2000,
            nms_pre=2000)),
    type='FasterRCNN')
optim_wrapper = dict(
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0001),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=12,
        gamma=0.1,
        milestones=[
            8,
            11,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file=
        '/mnt/bee9bc2f-b897-4648-b8c4-909715332cb4/linshaoqing/data/datasets/DOTA1024/test/DOTA_test1024.json',
        backend_args=None,
        data_prefix=dict(
            img=
            '/mnt/bee9bc2f-b897-4648-b8c4-909715332cb4/linshaoqing/data/datasets/DOTA1024/test/images'
        ),
        data_root=
        '/mnt/bee9bc2f-b897-4648-b8c4-909715332cb4/linshaoqing/data/datasets/DOTA1024/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1024,
                1024,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='DOTADataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file=
    '/mnt/bee9bc2f-b897-4648-b8c4-909715332cb4/linshaoqing/data/datasets/DOTA1024/test/DOTA_test1024.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        1024,
        1024,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=12, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=8,
    dataset=dict(
        ann_file=
        '/mnt/bee9bc2f-b897-4648-b8c4-909715332cb4/linshaoqing/data/datasets/DOTA1024/trainval/DOTA_trainval1024.json',
        backend_args=None,
        data_prefix=dict(
            img=
            '/mnt/bee9bc2f-b897-4648-b8c4-909715332cb4/linshaoqing/data/datasets/DOTA1024/trainval/images/'
        ),
        data_root=
        '/mnt/bee9bc2f-b897-4648-b8c4-909715332cb4/linshaoqing/data/datasets/DOTA1024/',
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(keep_ratio=True, scale=(
                1024,
                1024,
            ), type='Resize'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PackDetInputs'),
        ],
        type='DOTADataset'),
    num_workers=16,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        1024,
        1024,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file=
        '/mnt/bee9bc2f-b897-4648-b8c4-909715332cb4/linshaoqing/data/datasets/DOTA1024/trainval/DOTA_trainval1024.json',
        backend_args=None,
        data_prefix=dict(
            img=
            '/mnt/bee9bc2f-b897-4648-b8c4-909715332cb4/linshaoqing/data/datasets/DOTA1024/trainval/images'
        ),
        data_root=
        '/mnt/bee9bc2f-b897-4648-b8c4-909715332cb4/linshaoqing/data/datasets/DOTA1024/',
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1024,
                1024,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='DOTADataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file=
    '/mnt/bee9bc2f-b897-4648-b8c4-909715332cb4/linshaoqing/data/datasets/DOTA1024/trainval/DOTA_trainval1024.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
    dict(type='TensorboardVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
        dict(type='TensorboardVisBackend'),
    ])
work_dir = './work_dirs/benchmark_faster-rcnn_1gpu_r50_fpn_1x_lr1e-3_dotav1_0'

2023/10/31 20:40:57 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/10/31 20:40:57 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/10/31 20:41:10 - mmengine - INFO - load model from: torchvision://resnet50
2023/10/31 20:41:10 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet50
2023/10/31 20:41:10 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([3, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([12, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.weight - torch.Size([16, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.bias - torch.Size([16]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_reg.weight - torch.Size([60, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.fc_reg.bias - torch.Size([60]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
2023/10/31 20:41:10 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/10/31 20:41:10 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/10/31 20:41:10 - mmengine - INFO - Checkpoints will be saved to /mnt/bee9bc2f-b897-4648-b8c4-909715332cb4/linshaoqing/projects/OpenRS/work_dirs/benchmark_faster-rcnn_1gpu_r50_fpn_1x_lr1e-3_dotav1_0.
2023/10/31 20:42:06 - mmengine - INFO - Epoch(train)  [1][  50/1529]  lr: 9.9098e-04  eta: 5:41:00  time: 1.1182  data_time: 0.1454  memory: 13298  loss: 1.5724  loss_rpn_cls: 0.6316  loss_rpn_bbox: 0.0807  loss_cls: 0.8181  acc: 90.2588  loss_bbox: 0.0420
2023/10/31 20:42:54 - mmengine - INFO - Epoch(train)  [1][ 100/1529]  lr: 1.9920e-03  eta: 5:15:29  time: 0.9565  data_time: 0.0131  memory: 15008  loss: 0.9178  loss_rpn_cls: 0.2965  loss_rpn_bbox: 0.0783  loss_cls: 0.4169  acc: 86.0596  loss_bbox: 0.1262
2023/10/31 20:43:42 - mmengine - INFO - Epoch(train)  [1][ 150/1529]  lr: 2.9930e-03  eta: 5:06:41  time: 0.9589  data_time: 0.0172  memory: 13299  loss: 0.8495  loss_rpn_cls: 0.2089  loss_rpn_bbox: 0.0699  loss_cls: 0.4140  acc: 85.3027  loss_bbox: 0.1567
2023/10/31 20:44:31 - mmengine - INFO - Epoch(train)  [1][ 200/1529]  lr: 3.9940e-03  eta: 5:02:47  time: 0.9707  data_time: 0.0188  memory: 13637  loss: 0.8471  loss_rpn_cls: 0.1686  loss_rpn_bbox: 0.0750  loss_cls: 0.4048  acc: 86.4502  loss_bbox: 0.1987
2023/10/31 20:45:20 - mmengine - INFO - Epoch(train)  [1][ 250/1529]  lr: 4.9950e-03  eta: 5:00:58  time: 0.9848  data_time: 0.0208  memory: 13435  loss: 0.8861  loss_rpn_cls: 0.1488  loss_rpn_bbox: 0.0822  loss_cls: 0.4240  acc: 94.5801  loss_bbox: 0.2312
2023/10/31 20:46:10 - mmengine - INFO - Epoch(train)  [1][ 300/1529]  lr: 5.9960e-03  eta: 5:00:16  time: 1.0004  data_time: 0.0189  memory: 14089  loss: 0.7953  loss_rpn_cls: 0.1187  loss_rpn_bbox: 0.0717  loss_cls: 0.3804  acc: 85.8887  loss_bbox: 0.2246
2023/10/31 20:47:00 - mmengine - INFO - Epoch(train)  [1][ 350/1529]  lr: 6.9970e-03  eta: 4:59:46  time: 1.0063  data_time: 0.0199  memory: 14170  loss: 0.7942  loss_rpn_cls: 0.0983  loss_rpn_bbox: 0.0618  loss_cls: 0.3900  acc: 88.6963  loss_bbox: 0.2442
2023/10/31 20:47:51 - mmengine - INFO - Epoch(train)  [1][ 400/1529]  lr: 7.9980e-03  eta: 4:59:26  time: 1.0124  data_time: 0.0208  memory: 13298  loss: 0.7463  loss_rpn_cls: 0.1008  loss_rpn_bbox: 0.0634  loss_cls: 0.3574  acc: 91.7725  loss_bbox: 0.2248
2023/10/31 20:48:41 - mmengine - INFO - Epoch(train)  [1][ 450/1529]  lr: 8.9990e-03  eta: 4:58:46  time: 1.0065  data_time: 0.0185  memory: 14174  loss: 0.6991  loss_rpn_cls: 0.0884  loss_rpn_bbox: 0.0641  loss_cls: 0.3348  acc: 90.9424  loss_bbox: 0.2118
2023/10/31 20:49:32 - mmengine - INFO - Epoch(train)  [1][ 500/1529]  lr: 1.0000e-02  eta: 4:58:13  time: 1.0111  data_time: 0.0211  memory: 13681  loss: 0.7159  loss_rpn_cls: 0.0952  loss_rpn_bbox: 0.0654  loss_cls: 0.3506  acc: 92.2852  loss_bbox: 0.2047
2023/10/31 20:50:22 - mmengine - INFO - Epoch(train)  [1][ 550/1529]  lr: 1.0000e-02  eta: 4:57:32  time: 1.0080  data_time: 0.0216  memory: 14187  loss: 0.7041  loss_rpn_cls: 0.0988  loss_rpn_bbox: 0.0617  loss_cls: 0.3490  acc: 89.3066  loss_bbox: 0.1946
2023/10/31 20:51:13 - mmengine - INFO - Epoch(train)  [1][ 600/1529]  lr: 1.0000e-02  eta: 4:56:49  time: 1.0083  data_time: 0.0194  memory: 13299  loss: 0.6634  loss_rpn_cls: 0.0876  loss_rpn_bbox: 0.0611  loss_cls: 0.3176  acc: 83.2520  loss_bbox: 0.1970
2023/10/31 20:52:04 - mmengine - INFO - Epoch(train)  [1][ 650/1529]  lr: 1.0000e-02  eta: 4:56:20  time: 1.0190  data_time: 0.0215  memory: 14922  loss: 0.5876  loss_rpn_cls: 0.0779  loss_rpn_bbox: 0.0523  loss_cls: 0.2808  acc: 95.4834  loss_bbox: 0.1767
2023/10/31 20:52:54 - mmengine - INFO - Epoch(train)  [1][ 700/1529]  lr: 1.0000e-02  eta: 4:55:40  time: 1.0123  data_time: 0.0187  memory: 13729  loss: 0.6028  loss_rpn_cls: 0.0677  loss_rpn_bbox: 0.0584  loss_cls: 0.2856  acc: 93.6279  loss_bbox: 0.1910
2023/10/31 20:53:45 - mmengine - INFO - Epoch(train)  [1][ 750/1529]  lr: 1.0000e-02  eta: 4:54:58  time: 1.0126  data_time: 0.0194  memory: 13299  loss: 0.5829  loss_rpn_cls: 0.0677  loss_rpn_bbox: 0.0544  loss_cls: 0.2805  acc: 93.1641  loss_bbox: 0.1803
2023/10/31 20:54:36 - mmengine - INFO - Epoch(train)  [1][ 800/1529]  lr: 1.0000e-02  eta: 4:54:17  time: 1.0142  data_time: 0.0215  memory: 14242  loss: 0.5607  loss_rpn_cls: 0.0603  loss_rpn_bbox: 0.0464  loss_cls: 0.2727  acc: 91.5039  loss_bbox: 0.1813
2023/10/31 20:55:26 - mmengine - INFO - Epoch(train)  [1][ 850/1529]  lr: 1.0000e-02  eta: 4:53:24  time: 1.0034  data_time: 0.0185  memory: 13298  loss: 0.5283  loss_rpn_cls: 0.0649  loss_rpn_bbox: 0.0477  loss_cls: 0.2537  acc: 83.6182  loss_bbox: 0.1620
2023/10/31 20:56:16 - mmengine - INFO - Epoch(train)  [1][ 900/1529]  lr: 1.0000e-02  eta: 4:52:40  time: 1.0131  data_time: 0.0198  memory: 13299  loss: 0.4967  loss_rpn_cls: 0.0489  loss_rpn_bbox: 0.0469  loss_cls: 0.2385  acc: 84.9365  loss_bbox: 0.1624
2023/10/31 20:57:07 - mmengine - INFO - Epoch(train)  [1][ 950/1529]  lr: 1.0000e-02  eta: 4:52:03  time: 1.0205  data_time: 0.0191  memory: 13299  loss: 0.5138  loss_rpn_cls: 0.0613  loss_rpn_bbox: 0.0466  loss_cls: 0.2438  acc: 94.6045  loss_bbox: 0.1620
2023/10/31 20:57:58 - mmengine - INFO - Exp name: benchmark_faster-rcnn_1gpu_r50_fpn_1x_lr1e-3_dotav1_0_20231031_204049
2023/10/31 20:57:58 - mmengine - INFO - Epoch(train)  [1][1000/1529]  lr: 1.0000e-02  eta: 4:51:17  time: 1.0126  data_time: 0.0197  memory: 15410  loss: 0.4911  loss_rpn_cls: 0.0539  loss_rpn_bbox: 0.0474  loss_cls: 0.2299  acc: 91.5039  loss_bbox: 0.1600
2023/10/31 20:58:48 - mmengine - INFO - Epoch(train)  [1][1050/1529]  lr: 1.0000e-02  eta: 4:50:26  time: 1.0059  data_time: 0.0200  memory: 13299  loss: 0.4858  loss_rpn_cls: 0.0514  loss_rpn_bbox: 0.0428  loss_cls: 0.2330  acc: 93.2129  loss_bbox: 0.1585
2023/10/31 20:59:39 - mmengine - INFO - Epoch(train)  [1][1100/1529]  lr: 1.0000e-02  eta: 4:49:46  time: 1.0210  data_time: 0.0201  memory: 14278  loss: 0.4975  loss_rpn_cls: 0.0547  loss_rpn_bbox: 0.0427  loss_cls: 0.2454  acc: 89.5996  loss_bbox: 0.1547
2023/10/31 21:00:30 - mmengine - INFO - Epoch(train)  [1][1150/1529]  lr: 1.0000e-02  eta: 4:48:58  time: 1.0119  data_time: 0.0209  memory: 13943  loss: 0.4533  loss_rpn_cls: 0.0435  loss_rpn_bbox: 0.0348  loss_cls: 0.2216  acc: 90.5518  loss_bbox: 0.1535
2023/10/31 21:01:20 - mmengine - INFO - Epoch(train)  [1][1200/1529]  lr: 1.0000e-02  eta: 4:48:08  time: 1.0090  data_time: 0.0196  memory: 13298  loss: 0.4769  loss_rpn_cls: 0.0419  loss_rpn_bbox: 0.0426  loss_cls: 0.2287  acc: 92.2363  loss_bbox: 0.1638
2023/10/31 21:02:11 - mmengine - INFO - Epoch(train)  [1][1250/1529]  lr: 1.0000e-02  eta: 4:47:15  time: 1.0036  data_time: 0.0199  memory: 13299  loss: 0.4354  loss_rpn_cls: 0.0374  loss_rpn_bbox: 0.0387  loss_cls: 0.2122  acc: 89.1357  loss_bbox: 0.1470
2023/10/31 21:03:01 - mmengine - INFO - Epoch(train)  [1][1300/1529]  lr: 1.0000e-02  eta: 4:46:26  time: 1.0102  data_time: 0.0207  memory: 13298  loss: 0.4550  loss_rpn_cls: 0.0483  loss_rpn_bbox: 0.0490  loss_cls: 0.2079  acc: 89.9658  loss_bbox: 0.1499
2023/10/31 21:03:51 - mmengine - INFO - Epoch(train)  [1][1350/1529]  lr: 1.0000e-02  eta: 4:45:34  time: 1.0051  data_time: 0.0206  memory: 13299  loss: 0.4546  loss_rpn_cls: 0.0487  loss_rpn_bbox: 0.0460  loss_cls: 0.2111  acc: 92.9932  loss_bbox: 0.1488
2023/10/31 21:04:41 - mmengine - INFO - Epoch(train)  [1][1400/1529]  lr: 1.0000e-02  eta: 4:44:40  time: 1.0025  data_time: 0.0190  memory: 15313  loss: 0.4125  loss_rpn_cls: 0.0408  loss_rpn_bbox: 0.0385  loss_cls: 0.1916  acc: 91.5039  loss_bbox: 0.1417
2023/10/31 21:05:32 - mmengine - INFO - Epoch(train)  [1][1450/1529]  lr: 1.0000e-02  eta: 4:43:48  time: 1.0056  data_time: 0.0198  memory: 13923  loss: 0.4288  loss_rpn_cls: 0.0396  loss_rpn_bbox: 0.0355  loss_cls: 0.2134  acc: 91.7236  loss_bbox: 0.1402
2023/10/31 21:06:22 - mmengine - INFO - Epoch(train)  [1][1500/1529]  lr: 1.0000e-02  eta: 4:42:58  time: 1.0088  data_time: 0.0194  memory: 13299  loss: 0.4223  loss_rpn_cls: 0.0407  loss_rpn_bbox: 0.0375  loss_cls: 0.2039  acc: 94.8975  loss_bbox: 0.1402
2023/10/31 21:06:52 - mmengine - INFO - Exp name: benchmark_faster-rcnn_1gpu_r50_fpn_1x_lr1e-3_dotav1_0_20231031_204049
2023/10/31 21:06:52 - mmengine - INFO - Saving checkpoint at 1 epochs
2023/10/31 21:06:59 - mmengine - INFO - Epoch(val)  [1][   50/21046]    eta: 0:29:09  time: 0.0833  data_time: 0.0142  memory: 14233  
2023/10/31 21:07:02 - mmengine - INFO - Epoch(val)  [1][  100/21046]    eta: 0:26:28  time: 0.0683  data_time: 0.0068  memory: 680  
2023/10/31 21:07:05 - mmengine - INFO - Epoch(val)  [1][  150/21046]    eta: 0:25:20  time: 0.0666  data_time: 0.0046  memory: 680  
2023/10/31 21:07:09 - mmengine - INFO - Epoch(val)  [1][  200/21046]    eta: 0:25:31  time: 0.0757  data_time: 0.0101  memory: 680  
2023/10/31 21:07:13 - mmengine - INFO - Epoch(val)  [1][  250/21046]    eta: 0:24:54  time: 0.0655  data_time: 0.0050  memory: 680  
2023/10/31 21:07:16 - mmengine - INFO - Epoch(val)  [1][  300/21046]    eta: 0:24:28  time: 0.0653  data_time: 0.0030  memory: 680  
2023/10/31 21:07:19 - mmengine - INFO - Epoch(val)  [1][  350/21046]    eta: 0:24:09  time: 0.0656  data_time: 0.0055  memory: 680  
2023/10/31 21:07:22 - mmengine - INFO - Epoch(val)  [1][  400/21046]    eta: 0:23:58  time: 0.0669  data_time: 0.0050  memory: 680  
2023/10/31 21:07:26 - mmengine - INFO - Epoch(val)  [1][  450/21046]    eta: 0:23:46  time: 0.0662  data_time: 0.0049  memory: 680  
2023/10/31 21:07:29 - mmengine - INFO - Epoch(val)  [1][  500/21046]    eta: 0:23:44  time: 0.0699  data_time: 0.0051  memory: 680  
2023/10/31 21:07:33 - mmengine - INFO - Epoch(val)  [1][  550/21046]    eta: 0:23:46  time: 0.0722  data_time: 0.0082  memory: 680  
2023/10/31 21:07:36 - mmengine - INFO - Epoch(val)  [1][  600/21046]    eta: 0:23:44  time: 0.0706  data_time: 0.0090  memory: 680  
2023/10/31 21:07:40 - mmengine - INFO - Epoch(val)  [1][  650/21046]    eta: 0:23:36  time: 0.0664  data_time: 0.0040  memory: 680  
2023/10/31 21:07:43 - mmengine - INFO - Epoch(val)  [1][  700/21046]    eta: 0:23:29  time: 0.0674  data_time: 0.0046  memory: 680  
2023/10/31 21:07:47 - mmengine - INFO - Epoch(val)  [1][  750/21046]    eta: 0:23:26  time: 0.0698  data_time: 0.0055  memory: 680  
2023/10/31 21:07:50 - mmengine - INFO - Epoch(val)  [1][  800/21046]    eta: 0:23:28  time: 0.0730  data_time: 0.0084  memory: 680  
2023/10/31 21:07:54 - mmengine - INFO - Epoch(val)  [1][  850/21046]    eta: 0:23:21  time: 0.0671  data_time: 0.0053  memory: 680  
2023/10/31 21:07:57 - mmengine - INFO - Epoch(val)  [1][  900/21046]    eta: 0:23:21  time: 0.0726  data_time: 0.0098  memory: 680  
2023/10/31 21:08:01 - mmengine - INFO - Epoch(val)  [1][  950/21046]    eta: 0:23:18  time: 0.0698  data_time: 0.0084  memory: 680  
2023/10/31 21:08:04 - mmengine - INFO - Epoch(val)  [1][ 1000/21046]    eta: 0:23:08  time: 0.0625  data_time: 0.0028  memory: 680  
2023/10/31 21:08:07 - mmengine - INFO - Epoch(val)  [1][ 1050/21046]    eta: 0:23:01  time: 0.0660  data_time: 0.0039  memory: 680  
2023/10/31 21:08:11 - mmengine - INFO - Epoch(val)  [1][ 1100/21046]    eta: 0:22:57  time: 0.0679  data_time: 0.0037  memory: 680  
2023/10/31 21:08:14 - mmengine - INFO - Epoch(val)  [1][ 1150/21046]    eta: 0:22:53  time: 0.0693  data_time: 0.0060  memory: 680  
2023/10/31 21:08:18 - mmengine - INFO - Epoch(val)  [1][ 1200/21046]    eta: 0:22:56  time: 0.0765  data_time: 0.0124  memory: 680  
2023/10/31 21:08:21 - mmengine - INFO - Epoch(val)  [1][ 1250/21046]    eta: 0:22:49  time: 0.0653  data_time: 0.0040  memory: 680  
2023/10/31 21:08:25 - mmengine - INFO - Epoch(val)  [1][ 1300/21046]    eta: 0:22:47  time: 0.0704  data_time: 0.0044  memory: 680  
2023/10/31 21:08:28 - mmengine - INFO - Epoch(val)  [1][ 1350/21046]    eta: 0:22:41  time: 0.0664  data_time: 0.0026  memory: 680  
2023/10/31 21:08:31 - mmengine - INFO - Epoch(val)  [1][ 1400/21046]    eta: 0:22:36  time: 0.0664  data_time: 0.0039  memory: 680  
2023/10/31 21:08:35 - mmengine - INFO - Epoch(val)  [1][ 1450/21046]    eta: 0:22:31  time: 0.0667  data_time: 0.0047  memory: 680  
2023/10/31 21:08:38 - mmengine - INFO - Epoch(val)  [1][ 1500/21046]    eta: 0:22:22  time: 0.0609  data_time: 0.0027  memory: 680  
2023/10/31 21:08:41 - mmengine - INFO - Epoch(val)  [1][ 1550/21046]    eta: 0:22:16  time: 0.0638  data_time: 0.0030  memory: 680  
2023/10/31 21:08:44 - mmengine - INFO - Epoch(val)  [1][ 1600/21046]    eta: 0:22:12  time: 0.0681  data_time: 0.0045  memory: 680  
2023/10/31 21:08:48 - mmengine - INFO - Epoch(val)  [1][ 1650/21046]    eta: 0:22:08  time: 0.0678  data_time: 0.0038  memory: 680  
2023/10/31 21:08:51 - mmengine - INFO - Epoch(val)  [1][ 1700/21046]    eta: 0:22:05  time: 0.0692  data_time: 0.0053  memory: 680  
2023/10/31 21:08:55 - mmengine - INFO - Epoch(val)  [1][ 1750/21046]    eta: 0:22:01  time: 0.0665  data_time: 0.0037  memory: 680  
2023/10/31 21:08:58 - mmengine - INFO - Epoch(val)  [1][ 1800/21046]    eta: 0:21:58  time: 0.0695  data_time: 0.0076  memory: 680  
2023/10/31 21:09:01 - mmengine - INFO - Epoch(val)  [1][ 1850/21046]    eta: 0:21:54  time: 0.0681  data_time: 0.0039  memory: 680  
2023/10/31 21:09:05 - mmengine - INFO - Epoch(val)  [1][ 1900/21046]    eta: 0:21:54  time: 0.0746  data_time: 0.0085  memory: 680  
2023/10/31 21:09:09 - mmengine - INFO - Epoch(val)  [1][ 1950/21046]    eta: 0:21:56  time: 0.0793  data_time: 0.0102  memory: 680  
2023/10/31 21:09:13 - mmengine - INFO - Epoch(val)  [1][ 2000/21046]    eta: 0:21:53  time: 0.0713  data_time: 0.0053  memory: 680  
2023/10/31 21:09:16 - mmengine - INFO - Epoch(val)  [1][ 2050/21046]    eta: 0:21:50  time: 0.0695  data_time: 0.0060  memory: 680  
2023/10/31 21:09:20 - mmengine - INFO - Epoch(val)  [1][ 2100/21046]    eta: 0:21:49  time: 0.0740  data_time: 0.0070  memory: 680  
2023/10/31 21:09:23 - mmengine - INFO - Epoch(val)  [1][ 2150/21046]    eta: 0:21:43  time: 0.0625  data_time: 0.0024  memory: 680  
2023/10/31 21:09:26 - mmengine - INFO - Epoch(val)  [1][ 2200/21046]    eta: 0:21:39  time: 0.0694  data_time: 0.0083  memory: 680  
2023/10/31 21:09:30 - mmengine - INFO - Epoch(val)  [1][ 2250/21046]    eta: 0:21:35  time: 0.0660  data_time: 0.0049  memory: 680  
2023/10/31 21:09:33 - mmengine - INFO - Epoch(val)  [1][ 2300/21046]    eta: 0:21:31  time: 0.0691  data_time: 0.0058  memory: 680  
2023/10/31 21:09:37 - mmengine - INFO - Epoch(val)  [1][ 2350/21046]    eta: 0:21:32  time: 0.0786  data_time: 0.0081  memory: 680  
2023/10/31 21:09:41 - mmengine - INFO - Epoch(val)  [1][ 2400/21046]    eta: 0:21:29  time: 0.0709  data_time: 0.0064  memory: 680  
2023/10/31 21:09:44 - mmengine - INFO - Epoch(val)  [1][ 2450/21046]    eta: 0:21:25  time: 0.0672  data_time: 0.0046  memory: 680  
2023/10/31 21:09:48 - mmengine - INFO - Epoch(val)  [1][ 2500/21046]    eta: 0:21:21  time: 0.0688  data_time: 0.0040  memory: 680  
2023/10/31 21:09:51 - mmengine - INFO - Epoch(val)  [1][ 2550/21046]    eta: 0:21:17  time: 0.0662  data_time: 0.0041  memory: 680  
2023/10/31 21:09:54 - mmengine - INFO - Epoch(val)  [1][ 2600/21046]    eta: 0:21:12  time: 0.0653  data_time: 0.0035  memory: 680  
2023/10/31 21:09:58 - mmengine - INFO - Epoch(val)  [1][ 2650/21046]    eta: 0:21:10  time: 0.0738  data_time: 0.0071  memory: 680  
2023/10/31 21:10:01 - mmengine - INFO - Epoch(val)  [1][ 2700/21046]    eta: 0:21:05  time: 0.0648  data_time: 0.0038  memory: 680  
2023/10/31 21:10:04 - mmengine - INFO - Epoch(val)  [1][ 2750/21046]    eta: 0:21:00  time: 0.0638  data_time: 0.0038  memory: 680  
2023/10/31 21:10:08 - mmengine - INFO - Epoch(val)  [1][ 2800/21046]    eta: 0:20:58  time: 0.0729  data_time: 0.0071  memory: 680  
2023/10/31 21:10:11 - mmengine - INFO - Epoch(val)  [1][ 2850/21046]    eta: 0:20:54  time: 0.0668  data_time: 0.0042  memory: 680  
2023/10/31 21:10:15 - mmengine - INFO - Epoch(val)  [1][ 2900/21046]    eta: 0:20:52  time: 0.0745  data_time: 0.0061  memory: 680  
2023/10/31 21:10:18 - mmengine - INFO - Epoch(val)  [1][ 2950/21046]    eta: 0:20:48  time: 0.0681  data_time: 0.0062  memory: 680  
2023/10/31 21:10:22 - mmengine - INFO - Epoch(val)  [1][ 3000/21046]    eta: 0:20:47  time: 0.0752  data_time: 0.0108  memory: 680  
2023/10/31 21:10:26 - mmengine - INFO - Epoch(val)  [1][ 3050/21046]    eta: 0:20:44  time: 0.0711  data_time: 0.0067  memory: 680  
2023/10/31 21:10:29 - mmengine - INFO - Epoch(val)  [1][ 3100/21046]    eta: 0:20:41  time: 0.0700  data_time: 0.0036  memory: 680  
2023/10/31 21:10:33 - mmengine - INFO - Epoch(val)  [1][ 3150/21046]    eta: 0:20:37  time: 0.0700  data_time: 0.0058  memory: 680  
2023/10/31 21:10:36 - mmengine - INFO - Epoch(val)  [1][ 3200/21046]    eta: 0:20:34  time: 0.0688  data_time: 0.0052  memory: 680  
2023/10/31 21:10:40 - mmengine - INFO - Epoch(val)  [1][ 3250/21046]    eta: 0:20:30  time: 0.0690  data_time: 0.0056  memory: 680  
2023/10/31 21:10:43 - mmengine - INFO - Epoch(val)  [1][ 3300/21046]    eta: 0:20:25  time: 0.0621  data_time: 0.0027  memory: 680  
2023/10/31 21:10:46 - mmengine - INFO - Epoch(val)  [1][ 3350/21046]    eta: 0:20:20  time: 0.0652  data_time: 0.0034  memory: 680  
2023/10/31 21:10:49 - mmengine - INFO - Epoch(val)  [1][ 3400/21046]    eta: 0:20:16  time: 0.0664  data_time: 0.0052  memory: 680  
2023/10/31 21:10:53 - mmengine - INFO - Epoch(val)  [1][ 3450/21046]    eta: 0:20:13  time: 0.0687  data_time: 0.0059  memory: 680  
2023/10/31 21:10:56 - mmengine - INFO - Epoch(val)  [1][ 3500/21046]    eta: 0:20:10  time: 0.0729  data_time: 0.0071  memory: 680  
2023/10/31 21:11:00 - mmengine - INFO - Epoch(val)  [1][ 3550/21046]    eta: 0:20:08  time: 0.0717  data_time: 0.0050  memory: 680  
2023/10/31 21:11:04 - mmengine - INFO - Epoch(val)  [1][ 3600/21046]    eta: 0:20:06  time: 0.0756  data_time: 0.0104  memory: 680  
2023/10/31 21:11:07 - mmengine - INFO - Epoch(val)  [1][ 3650/21046]    eta: 0:20:02  time: 0.0674  data_time: 0.0062  memory: 680  
2023/10/31 21:11:10 - mmengine - INFO - Epoch(val)  [1][ 3700/21046]    eta: 0:19:57  time: 0.0627  data_time: 0.0030  memory: 680  
2023/10/31 21:11:14 - mmengine - INFO - Epoch(val)  [1][ 3750/21046]    eta: 0:19:52  time: 0.0647  data_time: 0.0030  memory: 680  
2023/10/31 21:11:17 - mmengine - INFO - Epoch(val)  [1][ 3800/21046]    eta: 0:19:48  time: 0.0658  data_time: 0.0034  memory: 680  
2023/10/31 21:11:20 - mmengine - INFO - Epoch(val)  [1][ 3850/21046]    eta: 0:19:45  time: 0.0681  data_time: 0.0048  memory: 680  
2023/10/31 21:11:24 - mmengine - INFO - Epoch(val)  [1][ 3900/21046]    eta: 0:19:41  time: 0.0693  data_time: 0.0072  memory: 680  
2023/10/31 21:11:27 - mmengine - INFO - Epoch(val)  [1][ 3950/21046]    eta: 0:19:37  time: 0.0651  data_time: 0.0041  memory: 680  
2023/10/31 21:11:30 - mmengine - INFO - Epoch(val)  [1][ 4000/21046]    eta: 0:19:33  time: 0.0686  data_time: 0.0052  memory: 680  
2023/10/31 21:11:34 - mmengine - INFO - Epoch(val)  [1][ 4050/21046]    eta: 0:19:30  time: 0.0701  data_time: 0.0065  memory: 680  
2023/10/31 21:11:37 - mmengine - INFO - Epoch(val)  [1][ 4100/21046]    eta: 0:19:26  time: 0.0665  data_time: 0.0047  memory: 680  
2023/10/31 21:11:40 - mmengine - INFO - Epoch(val)  [1][ 4150/21046]    eta: 0:19:22  time: 0.0642  data_time: 0.0030  memory: 680  
2023/10/31 21:11:44 - mmengine - INFO - Epoch(val)  [1][ 4200/21046]    eta: 0:19:18  time: 0.0646  data_time: 0.0033  memory: 680  
2023/10/31 21:11:47 - mmengine - INFO - Epoch(val)  [1][ 4250/21046]    eta: 0:19:14  time: 0.0662  data_time: 0.0045  memory: 680  
2023/10/31 21:11:50 - mmengine - INFO - Epoch(val)  [1][ 4300/21046]    eta: 0:19:09  time: 0.0645  data_time: 0.0030  memory: 680  
2023/10/31 21:11:54 - mmengine - INFO - Epoch(val)  [1][ 4350/21046]    eta: 0:19:07  time: 0.0725  data_time: 0.0081  memory: 680  
2023/10/31 21:11:57 - mmengine - INFO - Epoch(val)  [1][ 4400/21046]    eta: 0:19:02  time: 0.0636  data_time: 0.0041  memory: 680  
2023/10/31 21:12:01 - mmengine - INFO - Epoch(val)  [1][ 4450/21046]    eta: 0:18:59  time: 0.0708  data_time: 0.0032  memory: 680  
2023/10/31 21:12:04 - mmengine - INFO - Epoch(val)  [1][ 4500/21046]    eta: 0:18:56  time: 0.0671  data_time: 0.0039  memory: 680  
2023/10/31 21:12:07 - mmengine - INFO - Epoch(val)  [1][ 4550/21046]    eta: 0:18:52  time: 0.0679  data_time: 0.0035  memory: 680  
2023/10/31 21:12:11 - mmengine - INFO - Epoch(val)  [1][ 4600/21046]    eta: 0:18:49  time: 0.0684  data_time: 0.0041  memory: 680  
2023/10/31 21:12:15 - mmengine - INFO - Epoch(val)  [1][ 4650/21046]    eta: 0:18:46  time: 0.0741  data_time: 0.0092  memory: 680  
2023/10/31 21:12:18 - mmengine - INFO - Epoch(val)  [1][ 4700/21046]    eta: 0:18:42  time: 0.0668  data_time: 0.0029  memory: 680  
2023/10/31 21:12:21 - mmengine - INFO - Epoch(val)  [1][ 4750/21046]    eta: 0:18:38  time: 0.0652  data_time: 0.0031  memory: 680  
2023/10/31 21:12:25 - mmengine - INFO - Epoch(val)  [1][ 4800/21046]    eta: 0:18:35  time: 0.0720  data_time: 0.0064  memory: 680  
2023/10/31 21:12:28 - mmengine - INFO - Epoch(val)  [1][ 4850/21046]    eta: 0:18:31  time: 0.0657  data_time: 0.0053  memory: 680  
2023/10/31 21:12:32 - mmengine - INFO - Epoch(val)  [1][ 4900/21046]    eta: 0:18:28  time: 0.0714  data_time: 0.0079  memory: 680  
2023/10/31 21:12:35 - mmengine - INFO - Epoch(val)  [1][ 4950/21046]    eta: 0:18:25  time: 0.0658  data_time: 0.0029  memory: 680  
2023/10/31 21:12:38 - mmengine - INFO - Epoch(val)  [1][ 5000/21046]    eta: 0:18:21  time: 0.0668  data_time: 0.0045  memory: 680  
2023/10/31 21:12:42 - mmengine - INFO - Epoch(val)  [1][ 5050/21046]    eta: 0:18:17  time: 0.0679  data_time: 0.0062  memory: 680  
2023/10/31 21:12:45 - mmengine - INFO - Epoch(val)  [1][ 5100/21046]    eta: 0:18:14  time: 0.0695  data_time: 0.0057  memory: 680  
2023/10/31 21:12:49 - mmengine - INFO - Epoch(val)  [1][ 5150/21046]    eta: 0:18:11  time: 0.0734  data_time: 0.0073  memory: 680  
2023/10/31 21:12:52 - mmengine - INFO - Epoch(val)  [1][ 5200/21046]    eta: 0:18:07  time: 0.0641  data_time: 0.0037  memory: 680  
2023/10/31 21:12:55 - mmengine - INFO - Epoch(val)  [1][ 5250/21046]    eta: 0:18:03  time: 0.0629  data_time: 0.0029  memory: 680  
2023/10/31 21:12:59 - mmengine - INFO - Epoch(val)  [1][ 5300/21046]    eta: 0:18:00  time: 0.0699  data_time: 0.0069  memory: 680  
2023/10/31 21:13:02 - mmengine - INFO - Epoch(val)  [1][ 5350/21046]    eta: 0:17:56  time: 0.0678  data_time: 0.0060  memory: 680  
2023/10/31 21:13:06 - mmengine - INFO - Epoch(val)  [1][ 5400/21046]    eta: 0:17:53  time: 0.0720  data_time: 0.0075  memory: 680  
2023/10/31 21:13:09 - mmengine - INFO - Epoch(val)  [1][ 5450/21046]    eta: 0:17:50  time: 0.0710  data_time: 0.0068  memory: 680  
2023/10/31 21:13:13 - mmengine - INFO - Epoch(val)  [1][ 5500/21046]    eta: 0:17:46  time: 0.0663  data_time: 0.0048  memory: 680  
2023/10/31 21:13:16 - mmengine - INFO - Epoch(val)  [1][ 5550/21046]    eta: 0:17:42  time: 0.0616  data_time: 0.0035  memory: 680  
2023/10/31 21:13:19 - mmengine - INFO - Epoch(val)  [1][ 5600/21046]    eta: 0:17:37  time: 0.0595  data_time: 0.0025  memory: 680  
2023/10/31 21:13:22 - mmengine - INFO - Epoch(val)  [1][ 5650/21046]    eta: 0:17:33  time: 0.0601  data_time: 0.0024  memory: 680  
2023/10/31 21:13:25 - mmengine - INFO - Epoch(val)  [1][ 5700/21046]    eta: 0:17:28  time: 0.0600  data_time: 0.0023  memory: 680  
2023/10/31 21:13:28 - mmengine - INFO - Epoch(val)  [1][ 5750/21046]    eta: 0:17:24  time: 0.0600  data_time: 0.0022  memory: 680  
2023/10/31 21:13:31 - mmengine - INFO - Epoch(val)  [1][ 5800/21046]    eta: 0:17:19  time: 0.0600  data_time: 0.0028  memory: 680  
2023/10/31 21:13:34 - mmengine - INFO - Epoch(val)  [1][ 5850/21046]    eta: 0:17:15  time: 0.0599  data_time: 0.0022  memory: 680  
2023/10/31 21:13:37 - mmengine - INFO - Epoch(val)  [1][ 5900/21046]    eta: 0:17:10  time: 0.0593  data_time: 0.0021  memory: 680  
2023/10/31 21:13:40 - mmengine - INFO - Epoch(val)  [1][ 5950/21046]    eta: 0:17:06  time: 0.0592  data_time: 0.0021  memory: 680  
2023/10/31 21:13:43 - mmengine - INFO - Epoch(val)  [1][ 6000/21046]    eta: 0:17:01  time: 0.0599  data_time: 0.0027  memory: 680  
2023/10/31 21:13:46 - mmengine - INFO - Epoch(val)  [1][ 6050/21046]    eta: 0:16:57  time: 0.0602  data_time: 0.0027  memory: 680  
2023/10/31 21:13:49 - mmengine - INFO - Epoch(val)  [1][ 6100/21046]    eta: 0:16:52  time: 0.0597  data_time: 0.0026  memory: 680  
2023/10/31 21:13:52 - mmengine - INFO - Epoch(val)  [1][ 6150/21046]    eta: 0:16:48  time: 0.0595  data_time: 0.0021  memory: 680  
2023/10/31 21:13:55 - mmengine - INFO - Epoch(val)  [1][ 6200/21046]    eta: 0:16:44  time: 0.0597  data_time: 0.0027  memory: 680  
2023/10/31 21:13:58 - mmengine - INFO - Epoch(val)  [1][ 6250/21046]    eta: 0:16:39  time: 0.0602  data_time: 0.0028  memory: 680  
2023/10/31 21:14:00 - mmengine - INFO - Epoch(val)  [1][ 6300/21046]    eta: 0:16:35  time: 0.0586  data_time: 0.0020  memory: 680  
2023/10/31 21:14:03 - mmengine - INFO - Epoch(val)  [1][ 6350/21046]    eta: 0:16:31  time: 0.0593  data_time: 0.0022  memory: 680  
2023/10/31 21:14:06 - mmengine - INFO - Epoch(val)  [1][ 6400/21046]    eta: 0:16:26  time: 0.0581  data_time: 0.0018  memory: 680  
2023/10/31 21:14:09 - mmengine - INFO - Epoch(val)  [1][ 6450/21046]    eta: 0:16:22  time: 0.0588  data_time: 0.0024  memory: 680  
2023/10/31 21:14:12 - mmengine - INFO - Epoch(val)  [1][ 6500/21046]    eta: 0:16:17  time: 0.0579  data_time: 0.0020  memory: 680  
2023/10/31 21:14:15 - mmengine - INFO - Epoch(val)  [1][ 6550/21046]    eta: 0:16:13  time: 0.0586  data_time: 0.0019  memory: 680  
2023/10/31 21:14:18 - mmengine - INFO - Epoch(val)  [1][ 6600/21046]    eta: 0:16:09  time: 0.0594  data_time: 0.0022  memory: 680  
2023/10/31 21:14:21 - mmengine - INFO - Epoch(val)  [1][ 6650/21046]    eta: 0:16:05  time: 0.0596  data_time: 0.0022  memory: 680  
2023/10/31 21:14:24 - mmengine - INFO - Epoch(val)  [1][ 6700/21046]    eta: 0:16:01  time: 0.0597  data_time: 0.0022  memory: 680  
2023/10/31 21:14:27 - mmengine - INFO - Epoch(val)  [1][ 6750/21046]    eta: 0:15:56  time: 0.0594  data_time: 0.0021  memory: 680  
2023/10/31 21:14:30 - mmengine - INFO - Epoch(val)  [1][ 6800/21046]    eta: 0:15:52  time: 0.0601  data_time: 0.0022  memory: 680  
2023/10/31 21:14:33 - mmengine - INFO - Epoch(val)  [1][ 6850/21046]    eta: 0:15:48  time: 0.0580  data_time: 0.0021  memory: 680  
2023/10/31 21:14:36 - mmengine - INFO - Epoch(val)  [1][ 6900/21046]    eta: 0:15:44  time: 0.0586  data_time: 0.0025  memory: 680  
2023/10/31 21:14:39 - mmengine - INFO - Epoch(val)  [1][ 6950/21046]    eta: 0:15:40  time: 0.0586  data_time: 0.0020  memory: 680  
2023/10/31 21:14:42 - mmengine - INFO - Epoch(val)  [1][ 7000/21046]    eta: 0:15:36  time: 0.0586  data_time: 0.0019  memory: 680  
2023/10/31 21:14:45 - mmengine - INFO - Epoch(val)  [1][ 7050/21046]    eta: 0:15:32  time: 0.0588  data_time: 0.0019  memory: 680  
2023/10/31 21:14:48 - mmengine - INFO - Epoch(val)  [1][ 7100/21046]    eta: 0:15:27  time: 0.0578  data_time: 0.0018  memory: 680  
2023/10/31 21:14:51 - mmengine - INFO - Epoch(val)  [1][ 7150/21046]    eta: 0:15:23  time: 0.0583  data_time: 0.0019  memory: 680  
2023/10/31 21:14:53 - mmengine - INFO - Epoch(val)  [1][ 7200/21046]    eta: 0:15:19  time: 0.0589  data_time: 0.0020  memory: 680  
2023/10/31 21:14:56 - mmengine - INFO - Epoch(val)  [1][ 7250/21046]    eta: 0:15:15  time: 0.0601  data_time: 0.0028  memory: 680  
2023/10/31 21:14:59 - mmengine - INFO - Epoch(val)  [1][ 7300/21046]    eta: 0:15:11  time: 0.0599  data_time: 0.0027  memory: 680  
2023/10/31 21:15:02 - mmengine - INFO - Epoch(val)  [1][ 7350/21046]    eta: 0:15:07  time: 0.0601  data_time: 0.0026  memory: 680  
2023/10/31 21:15:05 - mmengine - INFO - Epoch(val)  [1][ 7400/21046]    eta: 0:15:03  time: 0.0595  data_time: 0.0029  memory: 680  
2023/10/31 21:15:08 - mmengine - INFO - Epoch(val)  [1][ 7450/21046]    eta: 0:14:59  time: 0.0582  data_time: 0.0023  memory: 680  
2023/10/31 21:15:11 - mmengine - INFO - Epoch(val)  [1][ 7500/21046]    eta: 0:14:55  time: 0.0586  data_time: 0.0023  memory: 680  
2023/10/31 21:15:14 - mmengine - INFO - Epoch(val)  [1][ 7550/21046]    eta: 0:14:52  time: 0.0595  data_time: 0.0026  memory: 680  
2023/10/31 21:15:17 - mmengine - INFO - Epoch(val)  [1][ 7600/21046]    eta: 0:14:48  time: 0.0595  data_time: 0.0022  memory: 680  
2023/10/31 21:15:20 - mmengine - INFO - Epoch(val)  [1][ 7650/21046]    eta: 0:14:44  time: 0.0592  data_time: 0.0020  memory: 680  
2023/10/31 21:15:23 - mmengine - INFO - Epoch(val)  [1][ 7700/21046]    eta: 0:14:40  time: 0.0595  data_time: 0.0022  memory: 680  
2023/10/31 21:15:26 - mmengine - INFO - Epoch(val)  [1][ 7750/21046]    eta: 0:14:36  time: 0.0589  data_time: 0.0029  memory: 680  
2023/10/31 21:15:29 - mmengine - INFO - Epoch(val)  [1][ 7800/21046]    eta: 0:14:32  time: 0.0596  data_time: 0.0030  memory: 680  
2023/10/31 21:15:32 - mmengine - INFO - Epoch(val)  [1][ 7850/21046]    eta: 0:14:28  time: 0.0596  data_time: 0.0022  memory: 680  
2023/10/31 21:15:35 - mmengine - INFO - Epoch(val)  [1][ 7900/21046]    eta: 0:14:25  time: 0.0598  data_time: 0.0026  memory: 680  
2023/10/31 21:15:38 - mmengine - INFO - Epoch(val)  [1][ 7950/21046]    eta: 0:14:21  time: 0.0595  data_time: 0.0022  memory: 680  
2023/10/31 21:15:41 - mmengine - INFO - Epoch(val)  [1][ 8000/21046]    eta: 0:14:17  time: 0.0597  data_time: 0.0023  memory: 680  
2023/10/31 21:15:44 - mmengine - INFO - Epoch(val)  [1][ 8050/21046]    eta: 0:14:13  time: 0.0595  data_time: 0.0025  memory: 680  
2023/10/31 21:15:47 - mmengine - INFO - Epoch(val)  [1][ 8100/21046]    eta: 0:14:09  time: 0.0612  data_time: 0.0036  memory: 680  
2023/10/31 21:15:50 - mmengine - INFO - Epoch(val)  [1][ 8150/21046]    eta: 0:14:06  time: 0.0582  data_time: 0.0019  memory: 680  
2023/10/31 21:15:53 - mmengine - INFO - Epoch(val)  [1][ 8200/21046]    eta: 0:14:02  time: 0.0580  data_time: 0.0019  memory: 680  
2023/10/31 21:15:56 - mmengine - INFO - Epoch(val)  [1][ 8250/21046]    eta: 0:13:58  time: 0.0591  data_time: 0.0020  memory: 680  
2023/10/31 21:15:59 - mmengine - INFO - Epoch(val)  [1][ 8300/21046]    eta: 0:13:54  time: 0.0594  data_time: 0.0022  memory: 680  
2023/10/31 21:16:02 - mmengine - INFO - Epoch(val)  [1][ 8350/21046]    eta: 0:13:50  time: 0.0589  data_time: 0.0021  memory: 680  
2023/10/31 21:16:05 - mmengine - INFO - Epoch(val)  [1][ 8400/21046]    eta: 0:13:47  time: 0.0590  data_time: 0.0023  memory: 680  
2023/10/31 21:16:08 - mmengine - INFO - Epoch(val)  [1][ 8450/21046]    eta: 0:13:43  time: 0.0596  data_time: 0.0022  memory: 680  
2023/10/31 21:16:11 - mmengine - INFO - Epoch(val)  [1][ 8500/21046]    eta: 0:13:39  time: 0.0596  data_time: 0.0023  memory: 680  
2023/10/31 21:16:14 - mmengine - INFO - Epoch(val)  [1][ 8550/21046]    eta: 0:13:36  time: 0.0593  data_time: 0.0021  memory: 680  
2023/10/31 21:16:17 - mmengine - INFO - Epoch(val)  [1][ 8600/21046]    eta: 0:13:32  time: 0.0584  data_time: 0.0020  memory: 680  
2023/10/31 21:16:20 - mmengine - INFO - Epoch(val)  [1][ 8650/21046]    eta: 0:13:28  time: 0.0583  data_time: 0.0019  memory: 680  
2023/10/31 21:16:23 - mmengine - INFO - Epoch(val)  [1][ 8700/21046]    eta: 0:13:24  time: 0.0591  data_time: 0.0023  memory: 680  
2023/10/31 21:16:25 - mmengine - INFO - Epoch(val)  [1][ 8750/21046]    eta: 0:13:21  time: 0.0583  data_time: 0.0019  memory: 680  
2023/10/31 21:16:28 - mmengine - INFO - Epoch(val)  [1][ 8800/21046]    eta: 0:13:17  time: 0.0585  data_time: 0.0019  memory: 680  
2023/10/31 21:16:31 - mmengine - INFO - Epoch(val)  [1][ 8850/21046]    eta: 0:13:13  time: 0.0585  data_time: 0.0019  memory: 680  
2023/10/31 21:16:34 - mmengine - INFO - Epoch(val)  [1][ 8900/21046]    eta: 0:13:10  time: 0.0593  data_time: 0.0023  memory: 680  
2023/10/31 21:16:37 - mmengine - INFO - Epoch(val)  [1][ 8950/21046]    eta: 0:13:06  time: 0.0591  data_time: 0.0022  memory: 680  
2023/10/31 21:16:40 - mmengine - INFO - Epoch(val)  [1][ 9000/21046]    eta: 0:13:02  time: 0.0597  data_time: 0.0022  memory: 680  
2023/10/31 21:16:43 - mmengine - INFO - Epoch(val)  [1][ 9050/21046]    eta: 0:12:59  time: 0.0593  data_time: 0.0022  memory: 680  
2023/10/31 21:16:46 - mmengine - INFO - Epoch(val)  [1][ 9100/21046]    eta: 0:12:55  time: 0.0602  data_time: 0.0031  memory: 680  
2023/10/31 21:16:49 - mmengine - INFO - Epoch(val)  [1][ 9150/21046]    eta: 0:12:51  time: 0.0580  data_time: 0.0019  memory: 680  
2023/10/31 21:16:52 - mmengine - INFO - Epoch(val)  [1][ 9200/21046]    eta: 0:12:48  time: 0.0578  data_time: 0.0018  memory: 680  
2023/10/31 21:16:55 - mmengine - INFO - Epoch(val)  [1][ 9250/21046]    eta: 0:12:44  time: 0.0587  data_time: 0.0020  memory: 680  
2023/10/31 21:16:58 - mmengine - INFO - Epoch(val)  [1][ 9300/21046]    eta: 0:12:40  time: 0.0597  data_time: 0.0022  memory: 680  
2023/10/31 21:17:01 - mmengine - INFO - Epoch(val)  [1][ 9350/21046]    eta: 0:12:37  time: 0.0593  data_time: 0.0023  memory: 680  
2023/10/31 21:17:04 - mmengine - INFO - Epoch(val)  [1][ 9400/21046]    eta: 0:12:33  time: 0.0598  data_time: 0.0024  memory: 680  
2023/10/31 21:17:07 - mmengine - INFO - Epoch(val)  [1][ 9450/21046]    eta: 0:12:30  time: 0.0598  data_time: 0.0023  memory: 680  
2023/10/31 21:17:10 - mmengine - INFO - Epoch(val)  [1][ 9500/21046]    eta: 0:12:26  time: 0.0596  data_time: 0.0021  memory: 680  
2023/10/31 21:17:13 - mmengine - INFO - Epoch(val)  [1][ 9550/21046]    eta: 0:12:23  time: 0.0598  data_time: 0.0031  memory: 680  
2023/10/31 21:17:16 - mmengine - INFO - Epoch(val)  [1][ 9600/21046]    eta: 0:12:19  time: 0.0593  data_time: 0.0022  memory: 680  
2023/10/31 21:17:19 - mmengine - INFO - Epoch(val)  [1][ 9650/21046]    eta: 0:12:16  time: 0.0594  data_time: 0.0024  memory: 680  
2023/10/31 21:17:22 - mmengine - INFO - Epoch(val)  [1][ 9700/21046]    eta: 0:12:12  time: 0.0596  data_time: 0.0023  memory: 680  
2023/10/31 21:17:25 - mmengine - INFO - Epoch(val)  [1][ 9750/21046]    eta: 0:12:09  time: 0.0612  data_time: 0.0043  memory: 680  
2023/10/31 21:17:28 - mmengine - INFO - Epoch(val)  [1][ 9800/21046]    eta: 0:12:05  time: 0.0597  data_time: 0.0022  memory: 680  
2023/10/31 21:17:31 - mmengine - INFO - Epoch(val)  [1][ 9850/21046]    eta: 0:12:02  time: 0.0597  data_time: 0.0022  memory: 680  
2023/10/31 21:17:34 - mmengine - INFO - Epoch(val)  [1][ 9900/21046]    eta: 0:11:58  time: 0.0600  data_time: 0.0026  memory: 680  
2023/10/31 21:17:37 - mmengine - INFO - Epoch(val)  [1][ 9950/21046]    eta: 0:11:55  time: 0.0597  data_time: 0.0024  memory: 680  
2023/10/31 21:17:40 - mmengine - INFO - Epoch(val)  [1][10000/21046]    eta: 0:11:51  time: 0.0595  data_time: 0.0023  memory: 680  
2023/10/31 21:17:43 - mmengine - INFO - Epoch(val)  [1][10050/21046]    eta: 0:11:48  time: 0.0609  data_time: 0.0036  memory: 680  
2023/10/31 21:17:46 - mmengine - INFO - Epoch(val)  [1][10100/21046]    eta: 0:11:44  time: 0.0604  data_time: 0.0045  memory: 680  
2023/10/31 21:17:49 - mmengine - INFO - Epoch(val)  [1][10150/21046]    eta: 0:11:41  time: 0.0586  data_time: 0.0022  memory: 680  
2023/10/31 21:17:52 - mmengine - INFO - Epoch(val)  [1][10200/21046]    eta: 0:11:37  time: 0.0593  data_time: 0.0023  memory: 680  
2023/10/31 21:17:55 - mmengine - INFO - Epoch(val)  [1][10250/21046]    eta: 0:11:34  time: 0.0593  data_time: 0.0023  memory: 680  
2023/10/31 21:17:58 - mmengine - INFO - Epoch(val)  [1][10300/21046]    eta: 0:11:30  time: 0.0594  data_time: 0.0022  memory: 680  
2023/10/31 21:18:01 - mmengine - INFO - Epoch(val)  [1][10350/21046]    eta: 0:11:27  time: 0.0591  data_time: 0.0022  memory: 680  
2023/10/31 21:18:04 - mmengine - INFO - Epoch(val)  [1][10400/21046]    eta: 0:11:23  time: 0.0590  data_time: 0.0021  memory: 680  
2023/10/31 21:18:07 - mmengine - INFO - Epoch(val)  [1][10450/21046]    eta: 0:11:20  time: 0.0573  data_time: 0.0018  memory: 680  
2023/10/31 21:18:09 - mmengine - INFO - Epoch(val)  [1][10500/21046]    eta: 0:11:16  time: 0.0580  data_time: 0.0018  memory: 680  
2023/10/31 21:18:12 - mmengine - INFO - Epoch(val)  [1][10550/21046]    eta: 0:11:13  time: 0.0598  data_time: 0.0023  memory: 680  
2023/10/31 21:18:15 - mmengine - INFO - Epoch(val)  [1][10600/21046]    eta: 0:11:09  time: 0.0591  data_time: 0.0022  memory: 680  
2023/10/31 21:18:18 - mmengine - INFO - Epoch(val)  [1][10650/21046]    eta: 0:11:06  time: 0.0595  data_time: 0.0021  memory: 680  
2023/10/31 21:18:21 - mmengine - INFO - Epoch(val)  [1][10700/21046]    eta: 0:11:03  time: 0.0595  data_time: 0.0022  memory: 680  
2023/10/31 21:18:24 - mmengine - INFO - Epoch(val)  [1][10750/21046]    eta: 0:10:59  time: 0.0591  data_time: 0.0021  memory: 680  
2023/10/31 21:18:27 - mmengine - INFO - Epoch(val)  [1][10800/21046]    eta: 0:10:56  time: 0.0598  data_time: 0.0028  memory: 680  
2023/10/31 21:18:30 - mmengine - INFO - Epoch(val)  [1][10850/21046]    eta: 0:10:52  time: 0.0594  data_time: 0.0021  memory: 680  
2023/10/31 21:18:33 - mmengine - INFO - Epoch(val)  [1][10900/21046]    eta: 0:10:49  time: 0.0580  data_time: 0.0019  memory: 680  
2023/10/31 21:18:36 - mmengine - INFO - Epoch(val)  [1][10950/21046]    eta: 0:10:45  time: 0.0595  data_time: 0.0024  memory: 680  
2023/10/31 21:18:39 - mmengine - INFO - Epoch(val)  [1][11000/21046]    eta: 0:10:42  time: 0.0595  data_time: 0.0023  memory: 680  
2023/10/31 21:18:42 - mmengine - INFO - Epoch(val)  [1][11050/21046]    eta: 0:10:39  time: 0.0595  data_time: 0.0023  memory: 680  
2023/10/31 21:18:45 - mmengine - INFO - Epoch(val)  [1][11100/21046]    eta: 0:10:35  time: 0.0593  data_time: 0.0023  memory: 680  
2023/10/31 21:18:48 - mmengine - INFO - Epoch(val)  [1][11150/21046]    eta: 0:10:32  time: 0.0602  data_time: 0.0027  memory: 680  
2023/10/31 21:18:51 - mmengine - INFO - Epoch(val)  [1][11200/21046]    eta: 0:10:28  time: 0.0583  data_time: 0.0020  memory: 680  
2023/10/31 21:18:54 - mmengine - INFO - Epoch(val)  [1][11250/21046]    eta: 0:10:25  time: 0.0584  data_time: 0.0022  memory: 680  
2023/10/31 21:18:57 - mmengine - INFO - Epoch(val)  [1][11300/21046]    eta: 0:10:22  time: 0.0594  data_time: 0.0020  memory: 680  
2023/10/31 21:19:00 - mmengine - INFO - Epoch(val)  [1][11350/21046]    eta: 0:10:18  time: 0.0579  data_time: 0.0019  memory: 680  
2023/10/31 21:19:03 - mmengine - INFO - Epoch(val)  [1][11400/21046]    eta: 0:10:15  time: 0.0582  data_time: 0.0019  memory: 680  
2023/10/31 21:19:06 - mmengine - INFO - Epoch(val)  [1][11450/21046]    eta: 0:10:11  time: 0.0582  data_time: 0.0020  memory: 680  
2023/10/31 21:19:09 - mmengine - INFO - Epoch(val)  [1][11500/21046]    eta: 0:10:08  time: 0.0589  data_time: 0.0021  memory: 680  
2023/10/31 21:19:12 - mmengine - INFO - Epoch(val)  [1][11550/21046]    eta: 0:10:05  time: 0.0598  data_time: 0.0022  memory: 680  
2023/10/31 21:19:15 - mmengine - INFO - Epoch(val)  [1][11600/21046]    eta: 0:10:01  time: 0.0575  data_time: 0.0020  memory: 680  
2023/10/31 21:19:18 - mmengine - INFO - Epoch(val)  [1][11650/21046]    eta: 0:09:58  time: 0.0594  data_time: 0.0023  memory: 680  
2023/10/31 21:19:21 - mmengine - INFO - Epoch(val)  [1][11700/21046]    eta: 0:09:54  time: 0.0595  data_time: 0.0021  memory: 680  
2023/10/31 21:19:24 - mmengine - INFO - Epoch(val)  [1][11750/21046]    eta: 0:09:51  time: 0.0601  data_time: 0.0025  memory: 680  
2023/10/31 21:19:26 - mmengine - INFO - Epoch(val)  [1][11800/21046]    eta: 0:09:48  time: 0.0591  data_time: 0.0022  memory: 680  
2023/10/31 21:19:29 - mmengine - INFO - Epoch(val)  [1][11850/21046]    eta: 0:09:44  time: 0.0575  data_time: 0.0019  memory: 680  
2023/10/31 21:19:32 - mmengine - INFO - Epoch(val)  [1][11900/21046]    eta: 0:09:41  time: 0.0579  data_time: 0.0020  memory: 680  
2023/10/31 21:19:35 - mmengine - INFO - Epoch(val)  [1][11950/21046]    eta: 0:09:38  time: 0.0579  data_time: 0.0018  memory: 680  
2023/10/31 21:19:38 - mmengine - INFO - Epoch(val)  [1][12000/21046]    eta: 0:09:34  time: 0.0599  data_time: 0.0024  memory: 680  
2023/10/31 21:19:41 - mmengine - INFO - Epoch(val)  [1][12050/21046]    eta: 0:09:31  time: 0.0601  data_time: 0.0027  memory: 680  
2023/10/31 21:19:44 - mmengine - INFO - Epoch(val)  [1][12100/21046]    eta: 0:09:28  time: 0.0587  data_time: 0.0021  memory: 680  
2023/10/31 21:19:47 - mmengine - INFO - Epoch(val)  [1][12150/21046]    eta: 0:09:24  time: 0.0598  data_time: 0.0022  memory: 680  
2023/10/31 21:19:50 - mmengine - INFO - Epoch(val)  [1][12200/21046]    eta: 0:09:21  time: 0.0600  data_time: 0.0022  memory: 680  
2023/10/31 21:19:53 - mmengine - INFO - Epoch(val)  [1][12250/21046]    eta: 0:09:18  time: 0.0599  data_time: 0.0024  memory: 680  
2023/10/31 21:19:56 - mmengine - INFO - Epoch(val)  [1][12300/21046]    eta: 0:09:14  time: 0.0596  data_time: 0.0023  memory: 680  
2023/10/31 21:19:59 - mmengine - INFO - Epoch(val)  [1][12350/21046]    eta: 0:09:11  time: 0.0603  data_time: 0.0032  memory: 680  
2023/10/31 21:20:02 - mmengine - INFO - Epoch(val)  [1][12400/21046]    eta: 0:09:08  time: 0.0591  data_time: 0.0022  memory: 680  
2023/10/31 21:20:05 - mmengine - INFO - Epoch(val)  [1][12450/21046]    eta: 0:09:04  time: 0.0581  data_time: 0.0019  memory: 680  
2023/10/31 21:20:08 - mmengine - INFO - Epoch(val)  [1][12500/21046]    eta: 0:09:01  time: 0.0596  data_time: 0.0027  memory: 680  
2023/10/31 21:20:11 - mmengine - INFO - Epoch(val)  [1][12550/21046]    eta: 0:08:58  time: 0.0588  data_time: 0.0021  memory: 680  
2023/10/31 21:20:14 - mmengine - INFO - Epoch(val)  [1][12600/21046]    eta: 0:08:54  time: 0.0595  data_time: 0.0022  memory: 680  
2023/10/31 21:20:17 - mmengine - INFO - Epoch(val)  [1][12650/21046]    eta: 0:08:51  time: 0.0581  data_time: 0.0023  memory: 680  
2023/10/31 21:20:20 - mmengine - INFO - Epoch(val)  [1][12700/21046]    eta: 0:08:48  time: 0.0581  data_time: 0.0019  memory: 680  
2023/10/31 21:20:23 - mmengine - INFO - Epoch(val)  [1][12750/21046]    eta: 0:08:44  time: 0.0575  data_time: 0.0017  memory: 680  
2023/10/31 21:20:26 - mmengine - INFO - Epoch(val)  [1][12800/21046]    eta: 0:08:41  time: 0.0587  data_time: 0.0019  memory: 680  
2023/10/31 21:20:29 - mmengine - INFO - Epoch(val)  [1][12850/21046]    eta: 0:08:38  time: 0.0603  data_time: 0.0025  memory: 680  
2023/10/31 21:20:32 - mmengine - INFO - Epoch(val)  [1][12900/21046]    eta: 0:08:35  time: 0.0594  data_time: 0.0021  memory: 680  
2023/10/31 21:20:35 - mmengine - INFO - Epoch(val)  [1][12950/21046]    eta: 0:08:31  time: 0.0599  data_time: 0.0024  memory: 680  
2023/10/31 21:20:38 - mmengine - INFO - Epoch(val)  [1][13000/21046]    eta: 0:08:28  time: 0.0597  data_time: 0.0023  memory: 680  
2023/10/31 21:20:41 - mmengine - INFO - Epoch(val)  [1][13050/21046]    eta: 0:08:25  time: 0.0599  data_time: 0.0022  memory: 680  
2023/10/31 21:20:44 - mmengine - INFO - Epoch(val)  [1][13100/21046]    eta: 0:08:22  time: 0.0605  data_time: 0.0025  memory: 680  
2023/10/31 21:20:47 - mmengine - INFO - Epoch(val)  [1][13150/21046]    eta: 0:08:18  time: 0.0609  data_time: 0.0027  memory: 680  
2023/10/31 21:20:50 - mmengine - INFO - Epoch(val)  [1][13200/21046]    eta: 0:08:15  time: 0.0598  data_time: 0.0023  memory: 680  
2023/10/31 21:20:53 - mmengine - INFO - Epoch(val)  [1][13250/21046]    eta: 0:08:12  time: 0.0601  data_time: 0.0022  memory: 680  
2023/10/31 21:20:56 - mmengine - INFO - Epoch(val)  [1][13300/21046]    eta: 0:08:09  time: 0.0603  data_time: 0.0025  memory: 680  
2023/10/31 21:20:59 - mmengine - INFO - Epoch(val)  [1][13350/21046]    eta: 0:08:05  time: 0.0606  data_time: 0.0025  memory: 680  
2023/10/31 21:21:02 - mmengine - INFO - Epoch(val)  [1][13400/21046]    eta: 0:08:02  time: 0.0599  data_time: 0.0023  memory: 680  
2023/10/31 21:21:05 - mmengine - INFO - Epoch(val)  [1][13450/21046]    eta: 0:07:59  time: 0.0604  data_time: 0.0026  memory: 680  
2023/10/31 21:21:08 - mmengine - INFO - Epoch(val)  [1][13500/21046]    eta: 0:07:56  time: 0.0588  data_time: 0.0021  memory: 680  
2023/10/31 21:21:11 - mmengine - INFO - Epoch(val)  [1][13550/21046]    eta: 0:07:52  time: 0.0602  data_time: 0.0026  memory: 680  
2023/10/31 21:21:15 - mmengine - INFO - Epoch(val)  [1][13600/21046]    eta: 0:07:50  time: 0.0961  data_time: 0.0371  memory: 680  
2023/10/31 21:21:19 - mmengine - INFO - Epoch(val)  [1][13650/21046]    eta: 0:07:47  time: 0.0675  data_time: 0.0057  memory: 680  
2023/10/31 21:21:22 - mmengine - INFO - Epoch(val)  [1][13700/21046]    eta: 0:07:44  time: 0.0624  data_time: 0.0032  memory: 680  
2023/10/31 21:21:25 - mmengine - INFO - Epoch(val)  [1][13750/21046]    eta: 0:07:41  time: 0.0640  data_time: 0.0027  memory: 680  
2023/10/31 21:21:29 - mmengine - INFO - Epoch(val)  [1][13800/21046]    eta: 0:07:38  time: 0.0660  data_time: 0.0039  memory: 680  
2023/10/31 21:21:32 - mmengine - INFO - Epoch(val)  [1][13850/21046]    eta: 0:07:34  time: 0.0632  data_time: 0.0039  memory: 680  
2023/10/31 21:21:35 - mmengine - INFO - Epoch(val)  [1][13900/21046]    eta: 0:07:31  time: 0.0620  data_time: 0.0028  memory: 680  
2023/10/31 21:21:38 - mmengine - INFO - Epoch(val)  [1][13950/21046]    eta: 0:07:28  time: 0.0632  data_time: 0.0038  memory: 680  
2023/10/31 21:21:41 - mmengine - INFO - Epoch(val)  [1][14000/21046]    eta: 0:07:25  time: 0.0664  data_time: 0.0053  memory: 680  
2023/10/31 21:21:44 - mmengine - INFO - Epoch(val)  [1][14050/21046]    eta: 0:07:22  time: 0.0618  data_time: 0.0026  memory: 680  
2023/10/31 21:21:48 - mmengine - INFO - Epoch(val)  [1][14100/21046]    eta: 0:07:19  time: 0.0639  data_time: 0.0028  memory: 680  
2023/10/31 21:21:51 - mmengine - INFO - Epoch(val)  [1][14150/21046]    eta: 0:07:16  time: 0.0644  data_time: 0.0036  memory: 680  
2023/10/31 21:21:54 - mmengine - INFO - Epoch(val)  [1][14200/21046]    eta: 0:07:12  time: 0.0632  data_time: 0.0029  memory: 680  
2023/10/31 21:21:57 - mmengine - INFO - Epoch(val)  [1][14250/21046]    eta: 0:07:09  time: 0.0634  data_time: 0.0030  memory: 680  
2023/10/31 21:22:00 - mmengine - INFO - Epoch(val)  [1][14300/21046]    eta: 0:07:06  time: 0.0657  data_time: 0.0057  memory: 680  
2023/10/31 21:22:04 - mmengine - INFO - Epoch(val)  [1][14350/21046]    eta: 0:07:03  time: 0.0677  data_time: 0.0049  memory: 680  
2023/10/31 21:22:07 - mmengine - INFO - Epoch(val)  [1][14400/21046]    eta: 0:07:00  time: 0.0623  data_time: 0.0032  memory: 680  
2023/10/31 21:22:10 - mmengine - INFO - Epoch(val)  [1][14450/21046]    eta: 0:06:57  time: 0.0669  data_time: 0.0071  memory: 680  
2023/10/31 21:22:13 - mmengine - INFO - Epoch(val)  [1][14500/21046]    eta: 0:06:54  time: 0.0619  data_time: 0.0027  memory: 680  
2023/10/31 21:22:17 - mmengine - INFO - Epoch(val)  [1][14550/21046]    eta: 0:06:50  time: 0.0638  data_time: 0.0031  memory: 680  
2023/10/31 21:22:20 - mmengine - INFO - Epoch(val)  [1][14600/21046]    eta: 0:06:47  time: 0.0615  data_time: 0.0025  memory: 680  
2023/10/31 21:22:23 - mmengine - INFO - Epoch(val)  [1][14650/21046]    eta: 0:06:44  time: 0.0628  data_time: 0.0034  memory: 680  
2023/10/31 21:22:26 - mmengine - INFO - Epoch(val)  [1][14700/21046]    eta: 0:06:41  time: 0.0645  data_time: 0.0037  memory: 680  
2023/10/31 21:22:29 - mmengine - INFO - Epoch(val)  [1][14750/21046]    eta: 0:06:38  time: 0.0654  data_time: 0.0059  memory: 680  
2023/10/31 21:22:33 - mmengine - INFO - Epoch(val)  [1][14800/21046]    eta: 0:06:35  time: 0.0658  data_time: 0.0043  memory: 680  
2023/10/31 21:22:36 - mmengine - INFO - Epoch(val)  [1][14850/21046]    eta: 0:06:32  time: 0.0649  data_time: 0.0038  memory: 680  
2023/10/31 21:22:39 - mmengine - INFO - Epoch(val)  [1][14900/21046]    eta: 0:06:28  time: 0.0638  data_time: 0.0034  memory: 680  
2023/10/31 21:22:42 - mmengine - INFO - Epoch(val)  [1][14950/21046]    eta: 0:06:25  time: 0.0627  data_time: 0.0030  memory: 680  
2023/10/31 21:22:46 - mmengine - INFO - Epoch(val)  [1][15000/21046]    eta: 0:06:22  time: 0.0660  data_time: 0.0043  memory: 680  
2023/10/31 21:22:49 - mmengine - INFO - Epoch(val)  [1][15050/21046]    eta: 0:06:19  time: 0.0617  data_time: 0.0034  memory: 680  
2023/10/31 21:22:52 - mmengine - INFO - Epoch(val)  [1][15100/21046]    eta: 0:06:16  time: 0.0637  data_time: 0.0043  memory: 680  
2023/10/31 21:22:55 - mmengine - INFO - Epoch(val)  [1][15150/21046]    eta: 0:06:13  time: 0.0648  data_time: 0.0033  memory: 680  
2023/10/31 21:22:58 - mmengine - INFO - Epoch(val)  [1][15200/21046]    eta: 0:06:10  time: 0.0634  data_time: 0.0047  memory: 680  
2023/10/31 21:23:01 - mmengine - INFO - Epoch(val)  [1][15250/21046]    eta: 0:06:06  time: 0.0648  data_time: 0.0047  memory: 680  
2023/10/31 21:23:05 - mmengine - INFO - Epoch(val)  [1][15300/21046]    eta: 0:06:03  time: 0.0620  data_time: 0.0027  memory: 680  
2023/10/31 21:23:08 - mmengine - INFO - Epoch(val)  [1][15350/21046]    eta: 0:06:00  time: 0.0630  data_time: 0.0025  memory: 680  
2023/10/31 21:23:11 - mmengine - INFO - Epoch(val)  [1][15400/21046]    eta: 0:05:57  time: 0.0653  data_time: 0.0037  memory: 680  
2023/10/31 21:23:14 - mmengine - INFO - Epoch(val)  [1][15450/21046]    eta: 0:05:54  time: 0.0639  data_time: 0.0032  memory: 680  
2023/10/31 21:23:17 - mmengine - INFO - Epoch(val)  [1][15500/21046]    eta: 0:05:51  time: 0.0628  data_time: 0.0036  memory: 680  
2023/10/31 21:23:21 - mmengine - INFO - Epoch(val)  [1][15550/21046]    eta: 0:05:47  time: 0.0656  data_time: 0.0040  memory: 680  
2023/10/31 21:23:24 - mmengine - INFO - Epoch(val)  [1][15600/21046]    eta: 0:05:44  time: 0.0614  data_time: 0.0028  memory: 680  
2023/10/31 21:23:27 - mmengine - INFO - Epoch(val)  [1][15650/21046]    eta: 0:05:41  time: 0.0661  data_time: 0.0048  memory: 680  
2023/10/31 21:23:30 - mmengine - INFO - Epoch(val)  [1][15700/21046]    eta: 0:05:38  time: 0.0637  data_time: 0.0036  memory: 680  
2023/10/31 21:23:33 - mmengine - INFO - Epoch(val)  [1][15750/21046]    eta: 0:05:35  time: 0.0639  data_time: 0.0028  memory: 680  
2023/10/31 21:23:37 - mmengine - INFO - Epoch(val)  [1][15800/21046]    eta: 0:05:32  time: 0.0638  data_time: 0.0035  memory: 680  
2023/10/31 21:23:40 - mmengine - INFO - Epoch(val)  [1][15850/21046]    eta: 0:05:28  time: 0.0635  data_time: 0.0028  memory: 680  
2023/10/31 21:23:43 - mmengine - INFO - Epoch(val)  [1][15900/21046]    eta: 0:05:25  time: 0.0618  data_time: 0.0032  memory: 680  
2023/10/31 21:23:46 - mmengine - INFO - Epoch(val)  [1][15950/21046]    eta: 0:05:22  time: 0.0624  data_time: 0.0035  memory: 680  
2023/10/31 21:23:49 - mmengine - INFO - Epoch(val)  [1][16000/21046]    eta: 0:05:19  time: 0.0678  data_time: 0.0048  memory: 680  
2023/10/31 21:23:53 - mmengine - INFO - Epoch(val)  [1][16050/21046]    eta: 0:05:16  time: 0.0645  data_time: 0.0027  memory: 680  
2023/10/31 21:23:56 - mmengine - INFO - Epoch(val)  [1][16100/21046]    eta: 0:05:13  time: 0.0618  data_time: 0.0029  memory: 680  
2023/10/31 21:23:59 - mmengine - INFO - Epoch(val)  [1][16150/21046]    eta: 0:05:10  time: 0.0638  data_time: 0.0036  memory: 680  
2023/10/31 21:24:02 - mmengine - INFO - Epoch(val)  [1][16200/21046]    eta: 0:05:06  time: 0.0624  data_time: 0.0036  memory: 680  
2023/10/31 21:24:05 - mmengine - INFO - Epoch(val)  [1][16250/21046]    eta: 0:05:03  time: 0.0638  data_time: 0.0036  memory: 680  
2023/10/31 21:24:09 - mmengine - INFO - Epoch(val)  [1][16300/21046]    eta: 0:05:00  time: 0.0669  data_time: 0.0061  memory: 680  
2023/10/31 21:24:12 - mmengine - INFO - Epoch(val)  [1][16350/21046]    eta: 0:04:57  time: 0.0606  data_time: 0.0025  memory: 680  
2023/10/31 21:24:15 - mmengine - INFO - Epoch(val)  [1][16400/21046]    eta: 0:04:54  time: 0.0702  data_time: 0.0056  memory: 680  
2023/10/31 21:24:18 - mmengine - INFO - Epoch(val)  [1][16450/21046]    eta: 0:04:51  time: 0.0636  data_time: 0.0034  memory: 680  
2023/10/31 21:24:22 - mmengine - INFO - Epoch(val)  [1][16500/21046]    eta: 0:04:47  time: 0.0630  data_time: 0.0040  memory: 680  
2023/10/31 21:24:25 - mmengine - INFO - Epoch(val)  [1][16550/21046]    eta: 0:04:44  time: 0.0643  data_time: 0.0044  memory: 680  
2023/10/31 21:24:28 - mmengine - INFO - Epoch(val)  [1][16600/21046]    eta: 0:04:41  time: 0.0655  data_time: 0.0047  memory: 680  
2023/10/31 21:24:31 - mmengine - INFO - Epoch(val)  [1][16650/21046]    eta: 0:04:38  time: 0.0680  data_time: 0.0060  memory: 680  
2023/10/31 21:24:35 - mmengine - INFO - Epoch(val)  [1][16700/21046]    eta: 0:04:35  time: 0.0630  data_time: 0.0043  memory: 680  
2023/10/31 21:24:38 - mmengine - INFO - Epoch(val)  [1][16750/21046]    eta: 0:04:32  time: 0.0661  data_time: 0.0048  memory: 680  
2023/10/31 21:24:41 - mmengine - INFO - Epoch(val)  [1][16800/21046]    eta: 0:04:29  time: 0.0653  data_time: 0.0034  memory: 680  
2023/10/31 21:24:44 - mmengine - INFO - Epoch(val)  [1][16850/21046]    eta: 0:04:25  time: 0.0617  data_time: 0.0027  memory: 680  
2023/10/31 21:24:48 - mmengine - INFO - Epoch(val)  [1][16900/21046]    eta: 0:04:22  time: 0.0651  data_time: 0.0037  memory: 680  
2023/10/31 21:24:51 - mmengine - INFO - Epoch(val)  [1][16950/21046]    eta: 0:04:19  time: 0.0620  data_time: 0.0029  memory: 680  
2023/10/31 21:24:54 - mmengine - INFO - Epoch(val)  [1][17000/21046]    eta: 0:04:16  time: 0.0679  data_time: 0.0058  memory: 680  
2023/10/31 21:24:57 - mmengine - INFO - Epoch(val)  [1][17050/21046]    eta: 0:04:13  time: 0.0618  data_time: 0.0029  memory: 680  
2023/10/31 21:25:00 - mmengine - INFO - Epoch(val)  [1][17100/21046]    eta: 0:04:10  time: 0.0632  data_time: 0.0035  memory: 680  
2023/10/31 21:25:03 - mmengine - INFO - Epoch(val)  [1][17150/21046]    eta: 0:04:06  time: 0.0627  data_time: 0.0029  memory: 680  
2023/10/31 21:25:07 - mmengine - INFO - Epoch(val)  [1][17200/21046]    eta: 0:04:03  time: 0.0658  data_time: 0.0034  memory: 680  
2023/10/31 21:25:10 - mmengine - INFO - Epoch(val)  [1][17250/21046]    eta: 0:04:00  time: 0.0618  data_time: 0.0026  memory: 680  
2023/10/31 21:25:13 - mmengine - INFO - Epoch(val)  [1][17300/21046]    eta: 0:03:57  time: 0.0670  data_time: 0.0043  memory: 680  
2023/10/31 21:25:16 - mmengine - INFO - Epoch(val)  [1][17350/21046]    eta: 0:03:54  time: 0.0637  data_time: 0.0039  memory: 680  
2023/10/31 21:25:20 - mmengine - INFO - Epoch(val)  [1][17400/21046]    eta: 0:03:51  time: 0.0647  data_time: 0.0033  memory: 680  
2023/10/31 21:25:23 - mmengine - INFO - Epoch(val)  [1][17450/21046]    eta: 0:03:47  time: 0.0633  data_time: 0.0039  memory: 680  
2023/10/31 21:25:26 - mmengine - INFO - Epoch(val)  [1][17500/21046]    eta: 0:03:44  time: 0.0667  data_time: 0.0050  memory: 680  
2023/10/31 21:25:29 - mmengine - INFO - Epoch(val)  [1][17550/21046]    eta: 0:03:41  time: 0.0651  data_time: 0.0043  memory: 680  
2023/10/31 21:25:33 - mmengine - INFO - Epoch(val)  [1][17600/21046]    eta: 0:03:38  time: 0.0646  data_time: 0.0035  memory: 680  
2023/10/31 21:25:36 - mmengine - INFO - Epoch(val)  [1][17650/21046]    eta: 0:03:35  time: 0.0626  data_time: 0.0034  memory: 680  
2023/10/31 21:25:39 - mmengine - INFO - Epoch(val)  [1][17700/21046]    eta: 0:03:32  time: 0.0639  data_time: 0.0032  memory: 680  
2023/10/31 21:25:42 - mmengine - INFO - Epoch(val)  [1][17750/21046]    eta: 0:03:29  time: 0.0641  data_time: 0.0044  memory: 680  
2023/10/31 21:25:45 - mmengine - INFO - Epoch(val)  [1][17800/21046]    eta: 0:03:25  time: 0.0604  data_time: 0.0024  memory: 680  
2023/10/31 21:25:49 - mmengine - INFO - Epoch(val)  [1][17850/21046]    eta: 0:03:22  time: 0.0703  data_time: 0.0075  memory: 680  
2023/10/31 21:25:52 - mmengine - INFO - Epoch(val)  [1][17900/21046]    eta: 0:03:19  time: 0.0640  data_time: 0.0041  memory: 680  
2023/10/31 21:25:55 - mmengine - INFO - Epoch(val)  [1][17950/21046]    eta: 0:03:16  time: 0.0689  data_time: 0.0083  memory: 680  
2023/10/31 21:25:59 - mmengine - INFO - Epoch(val)  [1][18000/21046]    eta: 0:03:13  time: 0.0647  data_time: 0.0051  memory: 680  
2023/10/31 21:26:02 - mmengine - INFO - Epoch(val)  [1][18050/21046]    eta: 0:03:10  time: 0.0627  data_time: 0.0032  memory: 680  
2023/10/31 21:26:05 - mmengine - INFO - Epoch(val)  [1][18100/21046]    eta: 0:03:06  time: 0.0632  data_time: 0.0037  memory: 680  
2023/10/31 21:26:08 - mmengine - INFO - Epoch(val)  [1][18150/21046]    eta: 0:03:03  time: 0.0671  data_time: 0.0043  memory: 680  
2023/10/31 21:26:12 - mmengine - INFO - Epoch(val)  [1][18200/21046]    eta: 0:03:00  time: 0.0663  data_time: 0.0049  memory: 680  
2023/10/31 21:26:15 - mmengine - INFO - Epoch(val)  [1][18250/21046]    eta: 0:02:57  time: 0.0662  data_time: 0.0046  memory: 680  
2023/10/31 21:26:18 - mmengine - INFO - Epoch(val)  [1][18300/21046]    eta: 0:02:54  time: 0.0631  data_time: 0.0047  memory: 680  
2023/10/31 21:26:21 - mmengine - INFO - Epoch(val)  [1][18350/21046]    eta: 0:02:51  time: 0.0635  data_time: 0.0026  memory: 680  
2023/10/31 21:26:25 - mmengine - INFO - Epoch(val)  [1][18400/21046]    eta: 0:02:47  time: 0.0645  data_time: 0.0041  memory: 680  
2023/10/31 21:26:28 - mmengine - INFO - Epoch(val)  [1][18450/21046]    eta: 0:02:44  time: 0.0629  data_time: 0.0028  memory: 680  
2023/10/31 21:26:31 - mmengine - INFO - Epoch(val)  [1][18500/21046]    eta: 0:02:41  time: 0.0667  data_time: 0.0034  memory: 680  
2023/10/31 21:26:34 - mmengine - INFO - Epoch(val)  [1][18550/21046]    eta: 0:02:38  time: 0.0628  data_time: 0.0038  memory: 680  
2023/10/31 21:26:37 - mmengine - INFO - Epoch(val)  [1][18600/21046]    eta: 0:02:35  time: 0.0649  data_time: 0.0047  memory: 680  
2023/10/31 21:26:41 - mmengine - INFO - Epoch(val)  [1][18650/21046]    eta: 0:02:32  time: 0.0657  data_time: 0.0051  memory: 680  
2023/10/31 21:26:44 - mmengine - INFO - Epoch(val)  [1][18700/21046]    eta: 0:02:28  time: 0.0638  data_time: 0.0047  memory: 680  
2023/10/31 21:26:47 - mmengine - INFO - Epoch(val)  [1][18750/21046]    eta: 0:02:25  time: 0.0629  data_time: 0.0036  memory: 680  
2023/10/31 21:26:50 - mmengine - INFO - Epoch(val)  [1][18800/21046]    eta: 0:02:22  time: 0.0671  data_time: 0.0051  memory: 680  
2023/10/31 21:26:54 - mmengine - INFO - Epoch(val)  [1][18850/21046]    eta: 0:02:19  time: 0.0614  data_time: 0.0029  memory: 680  
2023/10/31 21:26:57 - mmengine - INFO - Epoch(val)  [1][18900/21046]    eta: 0:02:16  time: 0.0656  data_time: 0.0035  memory: 680  
2023/10/31 21:27:00 - mmengine - INFO - Epoch(val)  [1][18950/21046]    eta: 0:02:13  time: 0.0619  data_time: 0.0032  memory: 680  
2023/10/31 21:27:03 - mmengine - INFO - Epoch(val)  [1][19000/21046]    eta: 0:02:09  time: 0.0622  data_time: 0.0029  memory: 680  
2023/10/31 21:27:06 - mmengine - INFO - Epoch(val)  [1][19050/21046]    eta: 0:02:06  time: 0.0609  data_time: 0.0026  memory: 680  
2023/10/31 21:27:09 - mmengine - INFO - Epoch(val)  [1][19100/21046]    eta: 0:02:03  time: 0.0660  data_time: 0.0041  memory: 680  
2023/10/31 21:27:13 - mmengine - INFO - Epoch(val)  [1][19150/21046]    eta: 0:02:00  time: 0.0644  data_time: 0.0039  memory: 680  
2023/10/31 21:27:16 - mmengine - INFO - Epoch(val)  [1][19200/21046]    eta: 0:01:57  time: 0.0667  data_time: 0.0038  memory: 680  
2023/10/31 21:27:19 - mmengine - INFO - Epoch(val)  [1][19250/21046]    eta: 0:01:54  time: 0.0671  data_time: 0.0042  memory: 680  
2023/10/31 21:27:23 - mmengine - INFO - Epoch(val)  [1][19300/21046]    eta: 0:01:50  time: 0.0649  data_time: 0.0045  memory: 680  
2023/10/31 21:27:26 - mmengine - INFO - Epoch(val)  [1][19350/21046]    eta: 0:01:47  time: 0.0661  data_time: 0.0033  memory: 680  
2023/10/31 21:27:29 - mmengine - INFO - Epoch(val)  [1][19400/21046]    eta: 0:01:44  time: 0.0660  data_time: 0.0049  memory: 680  
2023/10/31 21:27:32 - mmengine - INFO - Epoch(val)  [1][19450/21046]    eta: 0:01:41  time: 0.0644  data_time: 0.0041  memory: 680  
2023/10/31 21:27:36 - mmengine - INFO - Epoch(val)  [1][19500/21046]    eta: 0:01:38  time: 0.0637  data_time: 0.0032  memory: 680  
2023/10/31 21:27:39 - mmengine - INFO - Epoch(val)  [1][19550/21046]    eta: 0:01:35  time: 0.0663  data_time: 0.0059  memory: 680  
2023/10/31 21:27:42 - mmengine - INFO - Epoch(val)  [1][19600/21046]    eta: 0:01:31  time: 0.0636  data_time: 0.0025  memory: 680  
2023/10/31 21:27:45 - mmengine - INFO - Epoch(val)  [1][19650/21046]    eta: 0:01:28  time: 0.0662  data_time: 0.0039  memory: 680  
2023/10/31 21:27:49 - mmengine - INFO - Epoch(val)  [1][19700/21046]    eta: 0:01:25  time: 0.0659  data_time: 0.0045  memory: 680  
2023/10/31 21:27:52 - mmengine - INFO - Epoch(val)  [1][19750/21046]    eta: 0:01:22  time: 0.0637  data_time: 0.0044  memory: 680  
2023/10/31 21:27:55 - mmengine - INFO - Epoch(val)  [1][19800/21046]    eta: 0:01:19  time: 0.0702  data_time: 0.0053  memory: 680  
2023/10/31 21:27:59 - mmengine - INFO - Epoch(val)  [1][19850/21046]    eta: 0:01:16  time: 0.0688  data_time: 0.0040  memory: 680  
2023/10/31 21:28:02 - mmengine - INFO - Epoch(val)  [1][19900/21046]    eta: 0:01:12  time: 0.0647  data_time: 0.0046  memory: 680  
2023/10/31 21:28:06 - mmengine - INFO - Epoch(val)  [1][19950/21046]    eta: 0:01:09  time: 0.0706  data_time: 0.0066  memory: 680  
2023/10/31 21:28:09 - mmengine - INFO - Epoch(val)  [1][20000/21046]    eta: 0:01:06  time: 0.0682  data_time: 0.0039  memory: 680  
2023/10/31 21:28:12 - mmengine - INFO - Epoch(val)  [1][20050/21046]    eta: 0:01:03  time: 0.0669  data_time: 0.0044  memory: 680  
2023/10/31 21:28:16 - mmengine - INFO - Epoch(val)  [1][20100/21046]    eta: 0:01:00  time: 0.0703  data_time: 0.0060  memory: 680  
2023/10/31 21:28:19 - mmengine - INFO - Epoch(val)  [1][20150/21046]    eta: 0:00:57  time: 0.0627  data_time: 0.0034  memory: 680  
2023/10/31 21:28:23 - mmengine - INFO - Epoch(val)  [1][20200/21046]    eta: 0:00:53  time: 0.0678  data_time: 0.0040  memory: 680  
2023/10/31 21:28:26 - mmengine - INFO - Epoch(val)  [1][20250/21046]    eta: 0:00:50  time: 0.0686  data_time: 0.0054  memory: 680  
2023/10/31 21:28:29 - mmengine - INFO - Epoch(val)  [1][20300/21046]    eta: 0:00:47  time: 0.0667  data_time: 0.0039  memory: 680  
2023/10/31 21:28:33 - mmengine - INFO - Epoch(val)  [1][20350/21046]    eta: 0:00:44  time: 0.0651  data_time: 0.0032  memory: 680  
2023/10/31 21:28:36 - mmengine - INFO - Epoch(val)  [1][20400/21046]    eta: 0:00:41  time: 0.0689  data_time: 0.0056  memory: 680  
2023/10/31 21:28:39 - mmengine - INFO - Epoch(val)  [1][20450/21046]    eta: 0:00:37  time: 0.0635  data_time: 0.0042  memory: 680  
2023/10/31 21:28:43 - mmengine - INFO - Epoch(val)  [1][20500/21046]    eta: 0:00:34  time: 0.0659  data_time: 0.0038  memory: 680  
2023/10/31 21:28:46 - mmengine - INFO - Epoch(val)  [1][20550/21046]    eta: 0:00:31  time: 0.0700  data_time: 0.0057  memory: 680  
2023/10/31 21:28:49 - mmengine - INFO - Epoch(val)  [1][20600/21046]    eta: 0:00:28  time: 0.0654  data_time: 0.0046  memory: 680  
2023/10/31 21:28:53 - mmengine - INFO - Epoch(val)  [1][20650/21046]    eta: 0:00:25  time: 0.0648  data_time: 0.0037  memory: 680  
2023/10/31 21:28:56 - mmengine - INFO - Epoch(val)  [1][20700/21046]    eta: 0:00:22  time: 0.0655  data_time: 0.0035  memory: 680  
2023/10/31 21:28:59 - mmengine - INFO - Epoch(val)  [1][20750/21046]    eta: 0:00:18  time: 0.0635  data_time: 0.0030  memory: 680  
2023/10/31 21:29:02 - mmengine - INFO - Epoch(val)  [1][20800/21046]    eta: 0:00:15  time: 0.0627  data_time: 0.0039  memory: 680  
2023/10/31 21:29:06 - mmengine - INFO - Epoch(val)  [1][20850/21046]    eta: 0:00:12  time: 0.0699  data_time: 0.0071  memory: 680  
2023/10/31 21:29:09 - mmengine - INFO - Epoch(val)  [1][20900/21046]    eta: 0:00:09  time: 0.0615  data_time: 0.0024  memory: 680  
2023/10/31 21:29:12 - mmengine - INFO - Epoch(val)  [1][20950/21046]    eta: 0:00:06  time: 0.0639  data_time: 0.0039  memory: 680  
2023/10/31 21:29:15 - mmengine - INFO - Epoch(val)  [1][21000/21046]    eta: 0:00:02  time: 0.0657  data_time: 0.0037  memory: 680  
2023/10/31 21:29:40 - mmengine - INFO - Evaluating bbox...
2023/10/31 21:39:32 - mmengine - INFO - bbox_mAP_copypaste: 0.257 0.550 0.217 0.224 0.294 0.202
2023/10/31 21:39:34 - mmengine - INFO - Epoch(val) [1][21046/21046]    coco/bbox_mAP: 0.2570  coco/bbox_mAP_50: 0.5500  coco/bbox_mAP_75: 0.2170  coco/bbox_mAP_s: 0.2240  coco/bbox_mAP_m: 0.2940  coco/bbox_mAP_l: 0.2020  data_time: 0.0038  time: 0.0637
2023/10/31 21:40:25 - mmengine - INFO - Epoch(train)  [2][  50/1529]  lr: 1.0000e-02  eta: 4:41:49  time: 1.0186  data_time: 0.0760  memory: 14234  loss: 0.4237  loss_rpn_cls: 0.0411  loss_rpn_bbox: 0.0398  loss_cls: 0.2030  acc: 92.0166  loss_bbox: 0.1397
2023/10/31 21:41:12 - mmengine - INFO - Epoch(train)  [2][ 100/1529]  lr: 1.0000e-02  eta: 4:40:31  time: 0.9553  data_time: 0.0170  memory: 13306  loss: 0.3908  loss_rpn_cls: 0.0369  loss_rpn_bbox: 0.0359  loss_cls: 0.1878  acc: 94.2871  loss_bbox: 0.1302
2023/10/31 21:42:01 - mmengine - INFO - Epoch(train)  [2][ 150/1529]  lr: 1.0000e-02  eta: 4:39:20  time: 0.9645  data_time: 0.0143  memory: 13934  loss: 0.3918  loss_rpn_cls: 0.0390  loss_rpn_bbox: 0.0368  loss_cls: 0.1881  acc: 89.1357  loss_bbox: 0.1279
2023/10/31 21:42:49 - mmengine - INFO - Epoch(train)  [2][ 200/1529]  lr: 1.0000e-02  eta: 4:38:09  time: 0.9628  data_time: 0.0149  memory: 14089  loss: 0.4010  loss_rpn_cls: 0.0407  loss_rpn_bbox: 0.0361  loss_cls: 0.1909  acc: 95.4346  loss_bbox: 0.1333
2023/10/31 21:43:38 - mmengine - INFO - Epoch(train)  [2][ 250/1529]  lr: 1.0000e-02  eta: 4:37:08  time: 0.9814  data_time: 0.0163  memory: 13299  loss: 0.4074  loss_rpn_cls: 0.0391  loss_rpn_bbox: 0.0385  loss_cls: 0.1957  acc: 91.9678  loss_bbox: 0.1340
2023/10/31 21:44:28 - mmengine - INFO - Epoch(train)  [2][ 300/1529]  lr: 1.0000e-02  eta: 4:36:20  time: 1.0087  data_time: 0.0203  memory: 13299  loss: 0.3873  loss_rpn_cls: 0.0401  loss_rpn_bbox: 0.0343  loss_cls: 0.1861  acc: 89.9658  loss_bbox: 0.1268
2023/10/31 21:45:19 - mmengine - INFO - Epoch(train)  [2][ 350/1529]  lr: 1.0000e-02  eta: 4:35:33  time: 1.0102  data_time: 0.0167  memory: 13298  loss: 0.3934  loss_rpn_cls: 0.0383  loss_rpn_bbox: 0.0374  loss_cls: 0.1861  acc: 92.1875  loss_bbox: 0.1316
2023/10/31 21:46:10 - mmengine - INFO - Epoch(train)  [2][ 400/1529]  lr: 1.0000e-02  eta: 4:34:49  time: 1.0184  data_time: 0.0157  memory: 14911  loss: 0.3836  loss_rpn_cls: 0.0401  loss_rpn_bbox: 0.0397  loss_cls: 0.1773  acc: 94.8242  loss_bbox: 0.1266
2023/10/31 21:47:01 - mmengine - INFO - Epoch(train)  [2][ 450/1529]  lr: 1.0000e-02  eta: 4:34:07  time: 1.0233  data_time: 0.0165  memory: 13943  loss: 0.3689  loss_rpn_cls: 0.0350  loss_rpn_bbox: 0.0307  loss_cls: 0.1816  acc: 93.9697  loss_bbox: 0.1217
2023/10/31 21:47:22 - mmengine - INFO - Exp name: benchmark_faster-rcnn_1gpu_r50_fpn_1x_lr1e-3_dotav1_0_20231031_204049
2023/10/31 21:47:52 - mmengine - INFO - Epoch(train)  [2][ 500/1529]  lr: 1.0000e-02  eta: 4:33:27  time: 1.0301  data_time: 0.0183  memory: 13299  loss: 0.3798  loss_rpn_cls: 0.0328  loss_rpn_bbox: 0.0354  loss_cls: 0.1813  acc: 94.7266  loss_bbox: 0.1303
2023/10/31 21:48:43 - mmengine - INFO - Epoch(train)  [2][ 550/1529]  lr: 1.0000e-02  eta: 4:32:42  time: 1.0185  data_time: 0.0162  memory: 14131  loss: 0.3603  loss_rpn_cls: 0.0353  loss_rpn_bbox: 0.0334  loss_cls: 0.1694  acc: 90.9180  loss_bbox: 0.1221
2023/10/31 21:49:34 - mmengine - INFO - Epoch(train)  [2][ 600/1529]  lr: 1.0000e-02  eta: 4:31:55  time: 1.0148  data_time: 0.0164  memory: 13299  loss: 0.3551  loss_rpn_cls: 0.0356  loss_rpn_bbox: 0.0315  loss_cls: 0.1708  acc: 93.3350  loss_bbox: 0.1172
2023/10/31 21:50:25 - mmengine - INFO - Epoch(train)  [2][ 650/1529]  lr: 1.0000e-02  eta: 4:31:09  time: 1.0188  data_time: 0.0186  memory: 13298  loss: 0.4007  loss_rpn_cls: 0.0356  loss_rpn_bbox: 0.0387  loss_cls: 0.1896  acc: 92.2363  loss_bbox: 0.1369
2023/10/31 21:51:16 - mmengine - INFO - Epoch(train)  [2][ 700/1529]  lr: 1.0000e-02  eta: 4:30:23  time: 1.0181  data_time: 0.0168  memory: 13298  loss: 0.3719  loss_rpn_cls: 0.0371  loss_rpn_bbox: 0.0383  loss_cls: 0.1702  acc: 94.3604  loss_bbox: 0.1263
2023/10/31 21:52:07 - mmengine - INFO - Epoch(train)  [2][ 750/1529]  lr: 1.0000e-02  eta: 4:29:37  time: 1.0174  data_time: 0.0178  memory: 14148  loss: 0.3472  loss_rpn_cls: 0.0300  loss_rpn_bbox: 0.0304  loss_cls: 0.1726  acc: 93.0908  loss_bbox: 0.1141
2023/10/31 21:52:57 - mmengine - INFO - Epoch(train)  [2][ 800/1529]  lr: 1.0000e-02  eta: 4:28:49  time: 1.0137  data_time: 0.0190  memory: 13299  loss: 0.3482  loss_rpn_cls: 0.0315  loss_rpn_bbox: 0.0316  loss_cls: 0.1663  acc: 91.9922  loss_bbox: 0.1188
2023/10/31 21:53:48 - mmengine - INFO - Epoch(train)  [2][ 850/1529]  lr: 1.0000e-02  eta: 4:28:03  time: 1.0201  data_time: 0.0195  memory: 13299  loss: 0.3394  loss_rpn_cls: 0.0302  loss_rpn_bbox: 0.0315  loss_cls: 0.1653  acc: 95.6787  loss_bbox: 0.1125
2023/10/31 21:54:39 - mmengine - INFO - Epoch(train)  [2][ 900/1529]  lr: 1.0000e-02  eta: 4:27:13  time: 1.0074  data_time: 0.0168  memory: 15357  loss: 0.3377  loss_rpn_cls: 0.0310  loss_rpn_bbox: 0.0316  loss_cls: 0.1631  acc: 94.9707  loss_bbox: 0.1120
2023/10/31 21:55:29 - mmengine - INFO - Epoch(train)  [2][ 950/1529]  lr: 1.0000e-02  eta: 4:26:24  time: 1.0121  data_time: 0.0179  memory: 14255  loss: 0.3747  loss_rpn_cls: 0.0352  loss_rpn_bbox: 0.0387  loss_cls: 0.1749  acc: 92.5049  loss_bbox: 0.1259
2023/10/31 21:56:20 - mmengine - INFO - Epoch(train)  [2][1000/1529]  lr: 1.0000e-02  eta: 4:25:37  time: 1.0191  data_time: 0.0189  memory: 15400  loss: 0.3397  loss_rpn_cls: 0.0316  loss_rpn_bbox: 0.0306  loss_cls: 0.1629  acc: 91.5283  loss_bbox: 0.1146
2023/10/31 21:57:11 - mmengine - INFO - Epoch(train)  [2][1050/1529]  lr: 1.0000e-02  eta: 4:24:49  time: 1.0157  data_time: 0.0181  memory: 13637  loss: 0.3510  loss_rpn_cls: 0.0314  loss_rpn_bbox: 0.0319  loss_cls: 0.1685  acc: 94.3848  loss_bbox: 0.1192
2023/10/31 21:58:01 - mmengine - INFO - Epoch(train)  [2][1100/1529]  lr: 1.0000e-02  eta: 4:23:59  time: 1.0065  data_time: 0.0162  memory: 13299  loss: 0.3584  loss_rpn_cls: 0.0334  loss_rpn_bbox: 0.0338  loss_cls: 0.1762  acc: 92.1631  loss_bbox: 0.1151
2023/10/31 21:58:52 - mmengine - INFO - Epoch(train)  [2][1150/1529]  lr: 1.0000e-02  eta: 4:23:09  time: 1.0091  data_time: 0.0167  memory: 13299  loss: 0.3441  loss_rpn_cls: 0.0273  loss_rpn_bbox: 0.0307  loss_cls: 0.1662  acc: 94.4336  loss_bbox: 0.1199
2023/10/31 21:59:42 - mmengine - INFO - Epoch(train)  [2][1200/1529]  lr: 1.0000e-02  eta: 4:22:19  time: 1.0110  data_time: 0.0158  memory: 14963  loss: 0.3292  loss_rpn_cls: 0.0377  loss_rpn_bbox: 0.0308  loss_cls: 0.1519  acc: 95.4346  loss_bbox: 0.1088
2023/10/31 22:00:33 - mmengine - INFO - Epoch(train)  [2][1250/1529]  lr: 1.0000e-02  eta: 4:21:28  time: 1.0039  data_time: 0.0163  memory: 14096  loss: 0.3416  loss_rpn_cls: 0.0301  loss_rpn_bbox: 0.0320  loss_cls: 0.1653  acc: 92.3584  loss_bbox: 0.1143
2023/10/31 22:01:23 - mmengine - INFO - Epoch(train)  [2][1300/1529]  lr: 1.0000e-02  eta: 4:20:38  time: 1.0089  data_time: 0.0160  memory: 14275  loss: 0.3401  loss_rpn_cls: 0.0331  loss_rpn_bbox: 0.0308  loss_cls: 0.1607  acc: 91.6016  loss_bbox: 0.1155
2023/10/31 22:02:14 - mmengine - INFO - Epoch(train)  [2][1350/1529]  lr: 1.0000e-02  eta: 4:19:48  time: 1.0094  data_time: 0.0171  memory: 13299  loss: 0.3196  loss_rpn_cls: 0.0260  loss_rpn_bbox: 0.0286  loss_cls: 0.1542  acc: 94.8242  loss_bbox: 0.1107
2023/10/31 22:03:04 - mmengine - INFO - Epoch(train)  [2][1400/1529]  lr: 1.0000e-02  eta: 4:18:58  time: 1.0094  data_time: 0.0172  memory: 13299  loss: 0.3754  loss_rpn_cls: 0.0309  loss_rpn_bbox: 0.0337  loss_cls: 0.1863  acc: 94.7998  loss_bbox: 0.1245
2023/10/31 22:03:55 - mmengine - INFO - Epoch(train)  [2][1450/1529]  lr: 1.0000e-02  eta: 4:18:11  time: 1.0218  data_time: 0.0194  memory: 13299  loss: 0.3586  loss_rpn_cls: 0.0324  loss_rpn_bbox: 0.0327  loss_cls: 0.1743  acc: 95.6055  loss_bbox: 0.1192
2023/10/31 22:04:17 - mmengine - INFO - Exp name: benchmark_faster-rcnn_1gpu_r50_fpn_1x_lr1e-3_dotav1_0_20231031_204049
2023/10/31 22:04:46 - mmengine - INFO - Epoch(train)  [2][1500/1529]  lr: 1.0000e-02  eta: 4:17:23  time: 1.0181  data_time: 0.0203  memory: 13620  loss: 0.3271  loss_rpn_cls: 0.0298  loss_rpn_bbox: 0.0314  loss_cls: 0.1575  acc: 94.8975  loss_bbox: 0.1082
2023/10/31 22:05:16 - mmengine - INFO - Exp name: benchmark_faster-rcnn_1gpu_r50_fpn_1x_lr1e-3_dotav1_0_20231031_204049
2023/10/31 22:05:16 - mmengine - INFO - Saving checkpoint at 2 epochs
2023/10/31 22:05:22 - mmengine - INFO - Epoch(val)  [2][   50/21046]    eta: 0:25:24  time: 0.0726  data_time: 0.0078  memory: 13298  
2023/10/31 22:05:25 - mmengine - INFO - Epoch(val)  [2][  100/21046]    eta: 0:23:39  time: 0.0629  data_time: 0.0030  memory: 680  
2023/10/31 22:05:28 - mmengine - INFO - Epoch(val)  [2][  150/21046]    eta: 0:23:27  time: 0.0665  data_time: 0.0050  memory: 680  
2023/10/31 22:05:32 - mmengine - INFO - Epoch(val)  [2][  200/21046]    eta: 0:23:58  time: 0.0739  data_time: 0.0078  memory: 680  
2023/10/31 22:05:36 - mmengine - INFO - Epoch(val)  [2][  250/21046]    eta: 0:24:26  time: 0.0766  data_time: 0.0101  memory: 680  
2023/10/31 22:05:39 - mmengine - INFO - Epoch(val)  [2][  300/21046]    eta: 0:24:16  time: 0.0688  data_time: 0.0055  memory: 680  
2023/10/31 22:05:43 - mmengine - INFO - Epoch(val)  [2][  350/21046]    eta: 0:23:55  time: 0.0643  data_time: 0.0039  memory: 680  
2023/10/31 22:05:46 - mmengine - INFO - Epoch(val)  [2][  400/21046]    eta: 0:24:05  time: 0.0746  data_time: 0.0089  memory: 680  
2023/10/31 22:05:50 - mmengine - INFO - Epoch(val)  [2][  450/21046]    eta: 0:23:58  time: 0.0684  data_time: 0.0055  memory: 680  
2023/10/31 22:05:53 - mmengine - INFO - Epoch(val)  [2][  500/21046]    eta: 0:23:54  time: 0.0696  data_time: 0.0065  memory: 680  
2023/10/31 22:05:57 - mmengine - INFO - Epoch(val)  [2][  550/21046]    eta: 0:23:51  time: 0.0701  data_time: 0.0054  memory: 680  
2023/10/31 22:06:00 - mmengine - INFO - Epoch(val)  [2][  600/21046]    eta: 0:23:46  time: 0.0690  data_time: 0.0069  memory: 680  
2023/10/31 22:06:04 - mmengine - INFO - Epoch(val)  [2][  650/21046]    eta: 0:23:43  time: 0.0703  data_time: 0.0064  memory: 680  
2023/10/31 22:06:07 - mmengine - INFO - Epoch(val)  [2][  700/21046]    eta: 0:23:32  time: 0.0642  data_time: 0.0033  memory: 680  
2023/10/31 22:06:10 - mmengine - INFO - Epoch(val)  [2][  750/21046]    eta: 0:23:22  time: 0.0650  data_time: 0.0030  memory: 680  
2023/10/31 22:06:14 - mmengine - INFO - Epoch(val)  [2][  800/21046]    eta: 0:23:22  time: 0.0718  data_time: 0.0071  memory: 680  
2023/10/31 22:06:17 - mmengine - INFO - Epoch(val)  [2][  850/21046]    eta: 0:23:20  time: 0.0702  data_time: 0.0064  memory: 680  
2023/10/31 22:06:21 - mmengine - INFO - Epoch(val)  [2][  900/21046]    eta: 0:23:19  time: 0.0715  data_time: 0.0073  memory: 680  
2023/10/31 22:06:24 - mmengine - INFO - Epoch(val)  [2][  950/21046]    eta: 0:23:10  time: 0.0648  data_time: 0.0032  memory: 680  
2023/10/31 22:06:28 - mmengine - INFO - Epoch(val)  [2][ 1000/21046]    eta: 0:23:03  time: 0.0654  data_time: 0.0032  memory: 680  
2023/10/31 22:06:31 - mmengine - INFO - Epoch(val)  [2][ 1050/21046]    eta: 0:22:56  time: 0.0651  data_time: 0.0040  memory: 680  
2023/10/31 22:06:34 - mmengine - INFO - Epoch(val)  [2][ 1100/21046]    eta: 0:22:47  time: 0.0630  data_time: 0.0029  memory: 680  
2023/10/31 22:06:37 - mmengine - INFO - Epoch(val)  [2][ 1150/21046]    eta: 0:22:39  time: 0.0627  data_time: 0.0029  memory: 680  
2023/10/31 22:06:41 - mmengine - INFO - Epoch(val)  [2][ 1200/21046]    eta: 0:22:39  time: 0.0725  data_time: 0.0078  memory: 680  
2023/10/31 22:06:44 - mmengine - INFO - Epoch(val)  [2][ 1250/21046]    eta: 0:22:34  time: 0.0673  data_time: 0.0043  memory: 680  
2023/10/31 22:06:47 - mmengine - INFO - Epoch(val)  [2][ 1300/21046]    eta: 0:22:28  time: 0.0650  data_time: 0.0050  memory: 680  
2023/10/31 22:06:51 - mmengine - INFO - Epoch(val)  [2][ 1350/21046]    eta: 0:22:23  time: 0.0660  data_time: 0.0057  memory: 680  
2023/10/31 22:06:54 - mmengine - INFO - Epoch(val)  [2][ 1400/21046]    eta: 0:22:21  time: 0.0700  data_time: 0.0073  memory: 680  
2023/10/31 22:06:57 - mmengine - INFO - Epoch(val)  [2][ 1450/21046]    eta: 0:22:15  time: 0.0650  data_time: 0.0042  memory: 680  
2023/10/31 22:07:01 - mmengine - INFO - Epoch(val)  [2][ 1500/21046]    eta: 0:22:11  time: 0.0660  data_time: 0.0036  memory: 680  
2023/10/31 22:07:04 - mmengine - INFO - Epoch(val)  [2][ 1550/21046]    eta: 0:22:07  time: 0.0680  data_time: 0.0044  memory: 680  
2023/10/31 22:07:07 - mmengine - INFO - Epoch(val)  [2][ 1600/21046]    eta: 0:22:01  time: 0.0628  data_time: 0.0028  memory: 680  
2023/10/31 22:07:11 - mmengine - INFO - Epoch(val)  [2][ 1650/21046]    eta: 0:22:00  time: 0.0720  data_time: 0.0072  memory: 680  
2023/10/31 22:07:14 - mmengine - INFO - Epoch(val)  [2][ 1700/21046]    eta: 0:21:53  time: 0.0623  data_time: 0.0038  memory: 680  
2023/10/31 22:07:17 - mmengine - INFO - Epoch(val)  [2][ 1750/21046]    eta: 0:21:45  time: 0.0598  data_time: 0.0023  memory: 680  
2023/10/31 22:07:20 - mmengine - INFO - Epoch(val)  [2][ 1800/21046]    eta: 0:21:38  time: 0.0600  data_time: 0.0025  memory: 680  
2023/10/31 22:07:23 - mmengine - INFO - Epoch(val)  [2][ 1850/21046]    eta: 0:21:30  time: 0.0598  data_time: 0.0023  memory: 680  
2023/10/31 22:07:26 - mmengine - INFO - Epoch(val)  [2][ 1900/21046]    eta: 0:21:23  time: 0.0599  data_time: 0.0023  memory: 680  
2023/10/31 22:07:29 - mmengine - INFO - Epoch(val)  [2][ 1950/21046]    eta: 0:21:16  time: 0.0601  data_time: 0.0027  memory: 680  
2023/10/31 22:07:32 - mmengine - INFO - Epoch(val)  [2][ 2000/21046]    eta: 0:21:10  time: 0.0598  data_time: 0.0024  memory: 680  
2023/10/31 22:07:35 - mmengine - INFO - Epoch(val)  [2][ 2050/21046]    eta: 0:21:03  time: 0.0599  data_time: 0.0023  memory: 680  
2023/10/31 22:07:38 - mmengine - INFO - Epoch(val)  [2][ 2100/21046]    eta: 0:20:57  time: 0.0598  data_time: 0.0024  memory: 680  
2023/10/31 22:07:41 - mmengine - INFO - Epoch(val)  [2][ 2150/21046]    eta: 0:20:50  time: 0.0590  data_time: 0.0021  memory: 680  
2023/10/31 22:07:44 - mmengine - INFO - Epoch(val)  [2][ 2200/21046]    eta: 0:20:43  time: 0.0576  data_time: 0.0018  memory: 680  
2023/10/31 22:07:47 - mmengine - INFO - Epoch(val)  [2][ 2250/21046]    eta: 0:20:36  time: 0.0575  data_time: 0.0018  memory: 680  
2023/10/31 22:07:50 - mmengine - INFO - Epoch(val)  [2][ 2300/21046]    eta: 0:20:30  time: 0.0578  data_time: 0.0019  memory: 680  
2023/10/31 22:07:53 - mmengine - INFO - Epoch(val)  [2][ 2350/21046]    eta: 0:20:24  time: 0.0589  data_time: 0.0025  memory: 680  
2023/10/31 22:07:56 - mmengine - INFO - Epoch(val)  [2][ 2400/21046]    eta: 0:20:18  time: 0.0592  data_time: 0.0021  memory: 680  
2023/10/31 22:07:59 - mmengine - INFO - Epoch(val)  [2][ 2450/21046]    eta: 0:20:13  time: 0.0595  data_time: 0.0022  memory: 680  
2023/10/31 22:08:02 - mmengine - INFO - Epoch(val)  [2][ 2500/21046]    eta: 0:20:07  time: 0.0597  data_time: 0.0022  memory: 680  
2023/10/31 22:08:05 - mmengine - INFO - Epoch(val)  [2][ 2550/21046]    eta: 0:20:02  time: 0.0596  data_time: 0.0028  memory: 680  
2023/10/31 22:08:08 - mmengine - INFO - Epoch(val)  [2][ 2600/21046]    eta: 0:19:57  time: 0.0600  data_time: 0.0023  memory: 680  
2023/10/31 22:08:10 - mmengine - INFO - Epoch(val)  [2][ 2650/21046]    eta: 0:19:52  time: 0.0583  data_time: 0.0020  memory: 680  
2023/10/31 22:08:13 - mmengine - INFO - Epoch(val)  [2][ 2700/21046]    eta: 0:19:46  time: 0.0577  data_time: 0.0019  memory: 680  
2023/10/31 22:08:16 - mmengine - INFO - Epoch(val)  [2][ 2750/21046]    eta: 0:19:41  time: 0.0585  data_time: 0.0020  memory: 680  
2023/10/31 22:08:19 - mmengine - INFO - Epoch(val)  [2][ 2800/21046]    eta: 0:19:36  time: 0.0589  data_time: 0.0021  memory: 680  
2023/10/31 22:08:22 - mmengine - INFO - Epoch(val)  [2][ 2850/21046]    eta: 0:19:31  time: 0.0593  data_time: 0.0022  memory: 680  
2023/10/31 22:08:25 - mmengine - INFO - Epoch(val)  [2][ 2900/21046]    eta: 0:19:26  time: 0.0593  data_time: 0.0023  memory: 680  
2023/10/31 22:08:28 - mmengine - INFO - Epoch(val)  [2][ 2950/21046]    eta: 0:19:21  time: 0.0598  data_time: 0.0028  memory: 680  
2023/10/31 22:08:31 - mmengine - INFO - Epoch(val)  [2][ 3000/21046]    eta: 0:19:17  time: 0.0594  data_time: 0.0022  memory: 680  
2023/10/31 22:08:34 - mmengine - INFO - Epoch(val)  [2][ 3050/21046]    eta: 0:19:12  time: 0.0597  data_time: 0.0024  memory: 680  
2023/10/31 22:08:37 - mmengine - INFO - Epoch(val)  [2][ 3100/21046]    eta: 0:19:08  time: 0.0594  data_time: 0.0022  memory: 680  
2023/10/31 22:08:40 - mmengine - INFO - Epoch(val)  [2][ 3150/21046]    eta: 0:19:03  time: 0.0594  data_time: 0.0023  memory: 680  
2023/10/31 22:08:43 - mmengine - INFO - Epoch(val)  [2][ 3200/21046]    eta: 0:18:59  time: 0.0598  data_time: 0.0027  memory: 680  
2023/10/31 22:08:46 - mmengine - INFO - Epoch(val)  [2][ 3250/21046]    eta: 0:18:54  time: 0.0595  data_time: 0.0024  memory: 680  
2023/10/31 22:08:49 - mmengine - INFO - Epoch(val)  [2][ 3300/21046]    eta: 0:18:50  time: 0.0593  data_time: 0.0023  memory: 680  
2023/10/31 22:08:52 - mmengine - INFO - Epoch(val)  [2][ 3350/21046]    eta: 0:18:46  time: 0.0594  data_time: 0.0024  memory: 680  
2023/10/31 22:08:55 - mmengine - INFO - Epoch(val)  [2][ 3400/21046]    eta: 0:18:41  time: 0.0595  data_time: 0.0024  memory: 680  
2023/10/31 22:08:58 - mmengine - INFO - Epoch(val)  [2][ 3450/21046]    eta: 0:18:37  time: 0.0595  data_time: 0.0023  memory: 680  
2023/10/31 22:09:01 - mmengine - INFO - Epoch(val)  [2][ 3500/21046]    eta: 0:18:33  time: 0.0593  data_time: 0.0022  memory: 680  
2023/10/31 22:09:04 - mmengine - INFO - Epoch(val)  [2][ 3550/21046]    eta: 0:18:29  time: 0.0589  data_time: 0.0020  memory: 680  
2023/10/31 22:09:07 - mmengine - INFO - Epoch(val)  [2][ 3600/21046]    eta: 0:18:24  time: 0.0579  data_time: 0.0019  memory: 680  
2023/10/31 22:09:10 - mmengine - INFO - Epoch(val)  [2][ 3650/21046]    eta: 0:18:20  time: 0.0583  data_time: 0.0020  memory: 680  
2023/10/31 22:09:13 - mmengine - INFO - Epoch(val)  [2][ 3700/21046]    eta: 0:18:16  time: 0.0591  data_time: 0.0022  memory: 680  
2023/10/31 22:09:16 - mmengine - INFO - Epoch(val)  [2][ 3750/21046]    eta: 0:18:11  time: 0.0584  data_time: 0.0020  memory: 680  
2023/10/31 22:09:19 - mmengine - INFO - Epoch(val)  [2][ 3800/21046]    eta: 0:18:07  time: 0.0585  data_time: 0.0020  memory: 680  
2023/10/31 22:09:22 - mmengine - INFO - Epoch(val)  [2][ 3850/21046]    eta: 0:18:03  time: 0.0592  data_time: 0.0022  memory: 680  
2023/10/31 22:09:25 - mmengine - INFO - Epoch(val)  [2][ 3900/21046]    eta: 0:17:59  time: 0.0600  data_time: 0.0027  memory: 680  
2023/10/31 22:09:28 - mmengine - INFO - Epoch(val)  [2][ 3950/21046]    eta: 0:17:56  time: 0.0596  data_time: 0.0023  memory: 680  
2023/10/31 22:09:30 - mmengine - INFO - Epoch(val)  [2][ 4000/21046]    eta: 0:17:51  time: 0.0582  data_time: 0.0020  memory: 680  
2023/10/31 22:09:33 - mmengine - INFO - Epoch(val)  [2][ 4050/21046]    eta: 0:17:47  time: 0.0593  data_time: 0.0023  memory: 680  
2023/10/31 22:09:36 - mmengine - INFO - Epoch(val)  [2][ 4100/21046]    eta: 0:17:44  time: 0.0591  data_time: 0.0022  memory: 680  
2023/10/31 22:09:39 - mmengine - INFO - Epoch(val)  [2][ 4150/21046]    eta: 0:17:40  time: 0.0592  data_time: 0.0028  memory: 680  
2023/10/31 22:09:42 - mmengine - INFO - Epoch(val)  [2][ 4200/21046]    eta: 0:17:36  time: 0.0589  data_time: 0.0021  memory: 680  
2023/10/31 22:09:45 - mmengine - INFO - Epoch(val)  [2][ 4250/21046]    eta: 0:17:32  time: 0.0586  data_time: 0.0020  memory: 680  
2023/10/31 22:09:48 - mmengine - INFO - Epoch(val)  [2][ 4300/21046]    eta: 0:17:28  time: 0.0593  data_time: 0.0028  memory: 680  
2023/10/31 22:09:51 - mmengine - INFO - Epoch(val)  [2][ 4350/21046]    eta: 0:17:24  time: 0.0588  data_time: 0.0031  memory: 680  
2023/10/31 22:09:54 - mmengine - INFO - Epoch(val)  [2][ 4400/21046]    eta: 0:17:21  time: 0.0599  data_time: 0.0026  memory: 680  
2023/10/31 22:09:57 - mmengine - INFO - Epoch(val)  [2][ 4450/21046]    eta: 0:17:17  time: 0.0599  data_time: 0.0022  memory: 680  
2023/10/31 22:10:00 - mmengine - INFO - Epoch(val)  [2][ 4500/21046]    eta: 0:17:13  time: 0.0581  data_time: 0.0019  memory: 680  
2023/10/31 22:10:03 - mmengine - INFO - Epoch(val)  [2][ 4550/21046]    eta: 0:17:09  time: 0.0596  data_time: 0.0023  memory: 680  
2023/10/31 22:10:06 - mmengine - INFO - Epoch(val)  [2][ 4600/21046]    eta: 0:17:06  time: 0.0596  data_time: 0.0022  memory: 680  
2023/10/31 22:10:09 - mmengine - INFO - Epoch(val)  [2][ 4650/21046]    eta: 0:17:02  time: 0.0597  data_time: 0.0024  memory: 680  
2023/10/31 22:10:12 - mmengine - INFO - Epoch(val)  [2][ 4700/21046]    eta: 0:16:58  time: 0.0587  data_time: 0.0023  memory: 680  
2023/10/31 22:10:15 - mmengine - INFO - Epoch(val)  [2][ 4750/21046]    eta: 0:16:55  time: 0.0580  data_time: 0.0019  memory: 680  
2023/10/31 22:10:18 - mmengine - INFO - Epoch(val)  [2][ 4800/21046]    eta: 0:16:51  time: 0.0584  data_time: 0.0020  memory: 680  
2023/10/31 22:10:21 - mmengine - INFO - Epoch(val)  [2][ 4850/21046]    eta: 0:16:47  time: 0.0582  data_time: 0.0019  memory: 680  
2023/10/31 22:10:24 - mmengine - INFO - Epoch(val)  [2][ 4900/21046]    eta: 0:16:43  time: 0.0583  data_time: 0.0020  memory: 680  
2023/10/31 22:10:27 - mmengine - INFO - Epoch(val)  [2][ 4950/21046]    eta: 0:16:39  time: 0.0585  data_time: 0.0021  memory: 680  
2023/10/31 22:10:30 - mmengine - INFO - Epoch(val)  [2][ 5000/21046]    eta: 0:16:36  time: 0.0587  data_time: 0.0023  memory: 680  
2023/10/31 22:10:33 - mmengine - INFO - Epoch(val)  [2][ 5050/21046]    eta: 0:16:32  time: 0.0581  data_time: 0.0021  memory: 680  
2023/10/31 22:10:35 - mmengine - INFO - Epoch(val)  [2][ 5100/21046]    eta: 0:16:28  time: 0.0582  data_time: 0.0019  memory: 680  
2023/10/31 22:10:38 - mmengine - INFO - Epoch(val)  [2][ 5150/21046]    eta: 0:16:25  time: 0.0579  data_time: 0.0019  memory: 680  
2023/10/31 22:10:41 - mmengine - INFO - Epoch(val)  [2][ 5200/21046]    eta: 0:16:21  time: 0.0580  data_time: 0.0020  memory: 680  
2023/10/31 22:10:44 - mmengine - INFO - Epoch(val)  [2][ 5250/21046]    eta: 0:16:17  time: 0.0583  data_time: 0.0020  memory: 680  
2023/10/31 22:10:47 - mmengine - INFO - Epoch(val)  [2][ 5300/21046]    eta: 0:16:14  time: 0.0587  data_time: 0.0020  memory: 680  
2023/10/31 22:10:50 - mmengine - INFO - Epoch(val)  [2][ 5350/21046]    eta: 0:16:10  time: 0.0596  data_time: 0.0022  memory: 680  
2023/10/31 22:10:53 - mmengine - INFO - Epoch(val)  [2][ 5400/21046]    eta: 0:16:07  time: 0.0593  data_time: 0.0021  memory: 680  
2023/10/31 22:10:56 - mmengine - INFO - Epoch(val)  [2][ 5450/21046]    eta: 0:16:03  time: 0.0598  data_time: 0.0022  memory: 680  
2023/10/31 22:10:59 - mmengine - INFO - Epoch(val)  [2][ 5500/21046]    eta: 0:16:00  time: 0.0596  data_time: 0.0024  memory: 680  
2023/10/31 22:11:02 - mmengine - INFO - Epoch(val)  [2][ 5550/21046]    eta: 0:15:57  time: 0.0593  data_time: 0.0021  memory: 680  
2023/10/31 22:11:05 - mmengine - INFO - Epoch(val)  [2][ 5600/21046]    eta: 0:15:53  time: 0.0591  data_time: 0.0022  memory: 680  
2023/10/31 22:11:08 - mmengine - INFO - Epoch(val)  [2][ 5650/21046]    eta: 0:15:50  time: 0.0597  data_time: 0.0023  memory: 680  
2023/10/31 22:11:11 - mmengine - INFO - Epoch(val)  [2][ 5700/21046]    eta: 0:15:46  time: 0.0593  data_time: 0.0023  memory: 680  
2023/10/31 22:11:14 - mmengine - INFO - Epoch(val)  [2][ 5750/21046]    eta: 0:15:43  time: 0.0587  data_time: 0.0021  memory: 680  
2023/10/31 22:11:17 - mmengine - INFO - Epoch(val)  [2][ 5800/21046]    eta: 0:15:39  time: 0.0580  data_time: 0.0020  memory: 680  
2023/10/31 22:11:20 - mmengine - INFO - Epoch(val)  [2][ 5850/21046]    eta: 0:15:36  time: 0.0583  data_time: 0.0020  memory: 680  
2023/10/31 22:11:23 - mmengine - INFO - Epoch(val)  [2][ 5900/21046]    eta: 0:15:32  time: 0.0597  data_time: 0.0023  memory: 680  
2023/10/31 22:11:26 - mmengine - INFO - Epoch(val)  [2][ 5950/21046]    eta: 0:15:29  time: 0.0598  data_time: 0.0025  memory: 680  
2023/10/31 22:11:29 - mmengine - INFO - Epoch(val)  [2][ 6000/21046]    eta: 0:15:26  time: 0.0596  data_time: 0.0023  memory: 680  
2023/10/31 22:11:32 - mmengine - INFO - Epoch(val)  [2][ 6050/21046]    eta: 0:15:23  time: 0.0599  data_time: 0.0027  memory: 680  
2023/10/31 22:11:35 - mmengine - INFO - Epoch(val)  [2][ 6100/21046]    eta: 0:15:19  time: 0.0605  data_time: 0.0033  memory: 680  
2023/10/31 22:11:38 - mmengine - INFO - Epoch(val)  [2][ 6150/21046]    eta: 0:15:16  time: 0.0599  data_time: 0.0027  memory: 680  
2023/10/31 22:11:41 - mmengine - INFO - Epoch(val)  [2][ 6200/21046]    eta: 0:15:13  time: 0.0596  data_time: 0.0024  memory: 680  
2023/10/31 22:11:44 - mmengine - INFO - Epoch(val)  [2][ 6250/21046]    eta: 0:15:10  time: 0.0605  data_time: 0.0025  memory: 680  
2023/10/31 22:11:47 - mmengine - INFO - Epoch(val)  [2][ 6300/21046]    eta: 0:15:06  time: 0.0586  data_time: 0.0023  memory: 680  
2023/10/31 22:11:50 - mmengine - INFO - Epoch(val)  [2][ 6350/21046]    eta: 0:15:03  time: 0.0592  data_time: 0.0022  memory: 680  
2023/10/31 22:11:53 - mmengine - INFO - Epoch(val)  [2][ 6400/21046]    eta: 0:14:59  time: 0.0591  data_time: 0.0021  memory: 680  
2023/10/31 22:11:56 - mmengine - INFO - Epoch(val)  [2][ 6450/21046]    eta: 0:14:56  time: 0.0597  data_time: 0.0022  memory: 680  
2023/10/31 22:11:59 - mmengine - INFO - Epoch(val)  [2][ 6500/21046]    eta: 0:14:53  time: 0.0597  data_time: 0.0023  memory: 680  
2023/10/31 22:12:02 - mmengine - INFO - Epoch(val)  [2][ 6550/21046]    eta: 0:14:50  time: 0.0603  data_time: 0.0028  memory: 680  
2023/10/31 22:12:05 - mmengine - INFO - Epoch(val)  [2][ 6600/21046]    eta: 0:14:46  time: 0.0598  data_time: 0.0025  memory: 680  
2023/10/31 22:12:08 - mmengine - INFO - Epoch(val)  [2][ 6650/21046]    eta: 0:14:43  time: 0.0592  data_time: 0.0023  memory: 680  
2023/10/31 22:12:11 - mmengine - INFO - Epoch(val)  [2][ 6700/21046]    eta: 0:14:40  time: 0.0596  data_time: 0.0031  memory: 680  
2023/10/31 22:12:13 - mmengine - INFO - Epoch(val)  [2][ 6750/21046]    eta: 0:14:36  time: 0.0577  data_time: 0.0019  memory: 680  
2023/10/31 22:12:16 - mmengine - INFO - Epoch(val)  [2][ 6800/21046]    eta: 0:14:33  time: 0.0597  data_time: 0.0022  memory: 680  
2023/10/31 22:12:19 - mmengine - INFO - Epoch(val)  [2][ 6850/21046]    eta: 0:14:30  time: 0.0594  data_time: 0.0022  memory: 680  
2023/10/31 22:12:22 - mmengine - INFO - Epoch(val)  [2][ 6900/21046]    eta: 0:14:27  time: 0.0606  data_time: 0.0033  memory: 680  
2023/10/31 22:12:25 - mmengine - INFO - Epoch(val)  [2][ 6950/21046]    eta: 0:14:24  time: 0.0600  data_time: 0.0024  memory: 680  
2023/10/31 22:12:28 - mmengine - INFO - Epoch(val)  [2][ 7000/21046]    eta: 0:14:20  time: 0.0598  data_time: 0.0023  memory: 680  
2023/10/31 22:12:31 - mmengine - INFO - Epoch(val)  [2][ 7050/21046]    eta: 0:14:17  time: 0.0595  data_time: 0.0024  memory: 680  
2023/10/31 22:12:34 - mmengine - INFO - Epoch(val)  [2][ 7100/21046]    eta: 0:14:14  time: 0.0594  data_time: 0.0022  memory: 680  
2023/10/31 22:12:37 - mmengine - INFO - Epoch(val)  [2][ 7150/21046]    eta: 0:14:11  time: 0.0598  data_time: 0.0023  memory: 680  
2023/10/31 22:12:40 - mmengine - INFO - Epoch(val)  [2][ 7200/21046]    eta: 0:14:08  time: 0.0602  data_time: 0.0026  memory: 680  
2023/10/31 22:12:43 - mmengine - INFO - Epoch(val)  [2][ 7250/21046]    eta: 0:14:04  time: 0.0597  data_time: 0.0023  memory: 680  
2023/10/31 22:12:46 - mmengine - INFO - Epoch(val)  [2][ 7300/21046]    eta: 0:14:01  time: 0.0601  data_time: 0.0027  memory: 680  
2023/10/31 22:12:49 - mmengine - INFO - Epoch(val)  [2][ 7350/21046]    eta: 0:13:58  time: 0.0596  data_time: 0.0022  memory: 680  
2023/10/31 22:12:52 - mmengine - INFO - Epoch(val)  [2][ 7400/21046]    eta: 0:13:55  time: 0.0593  data_time: 0.0023  memory: 680  
2023/10/31 22:12:55 - mmengine - INFO - Epoch(val)  [2][ 7450/21046]    eta: 0:13:51  time: 0.0596  data_time: 0.0022  memory: 680  
2023/10/31 22:12:58 - mmengine - INFO - Epoch(val)  [2][ 7500/21046]    eta: 0:13:48  time: 0.0597  data_time: 0.0023  memory: 680  
2023/10/31 22:13:01 - mmengine - INFO - Epoch(val)  [2][ 7550/21046]    eta: 0:13:45  time: 0.0595  data_time: 0.0024  memory: 680  
2023/10/31 22:13:04 - mmengine - INFO - Epoch(val)  [2][ 7600/21046]    eta: 0:13:42  time: 0.0603  data_time: 0.0028  memory: 680  
2023/10/31 22:13:07 - mmengine - INFO - Epoch(val)  [2][ 7650/21046]    eta: 0:13:39  time: 0.0598  data_time: 0.0022  memory: 680  
2023/10/31 22:13:10 - mmengine - INFO - Epoch(val)  [2][ 7700/21046]    eta: 0:13:35  time: 0.0583  data_time: 0.0020  memory: 680  
2023/10/31 22:13:13 - mmengine - INFO - Epoch(val)  [2][ 7750/21046]    eta: 0:13:32  time: 0.0581  data_time: 0.0020  memory: 680  
2023/10/31 22:13:16 - mmengine - INFO - Epoch(val)  [2][ 7800/21046]    eta: 0:13:29  time: 0.0593  data_time: 0.0025  memory: 680  
2023/10/31 22:13:19 - mmengine - INFO - Epoch(val)  [2][ 7850/21046]    eta: 0:13:26  time: 0.0602  data_time: 0.0023  memory: 680  
2023/10/31 22:13:22 - mmengine - INFO - Epoch(val)  [2][ 7900/21046]    eta: 0:13:23  time: 0.0596  data_time: 0.0023  memory: 680  
2023/10/31 22:13:25 - mmengine - INFO - Epoch(val)  [2][ 7950/21046]    eta: 0:13:19  time: 0.0603  data_time: 0.0027  memory: 680  
2023/10/31 22:13:28 - mmengine - INFO - Epoch(val)  [2][ 8000/21046]    eta: 0:13:16  time: 0.0598  data_time: 0.0023  memory: 680  
2023/10/31 22:13:31 - mmengine - INFO - Epoch(val)  [2][ 8050/21046]    eta: 0:13:13  time: 0.0595  data_time: 0.0022  memory: 680  
2023/10/31 22:13:34 - mmengine - INFO - Epoch(val)  [2][ 8100/21046]    eta: 0:13:10  time: 0.0593  data_time: 0.0022  memory: 680  
2023/10/31 22:13:37 - mmengine - INFO - Epoch(val)  [2][ 8150/21046]    eta: 0:13:07  time: 0.0602  data_time: 0.0031  memory: 680  
2023/10/31 22:13:40 - mmengine - INFO - Epoch(val)  [2][ 8200/21046]    eta: 0:13:04  time: 0.0598  data_time: 0.0024  memory: 680  
2023/10/31 22:13:43 - mmengine - INFO - Epoch(val)  [2][ 8250/21046]    eta: 0:13:01  time: 0.0595  data_time: 0.0024  memory: 680  
2023/10/31 22:13:46 - mmengine - INFO - Epoch(val)  [2][ 8300/21046]    eta: 0:12:57  time: 0.0604  data_time: 0.0030  memory: 680  
2023/10/31 22:13:49 - mmengine - INFO - Epoch(val)  [2][ 8350/21046]    eta: 0:12:54  time: 0.0596  data_time: 0.0022  memory: 680  
2023/10/31 22:13:52 - mmengine - INFO - Epoch(val)  [2][ 8400/21046]    eta: 0:12:51  time: 0.0593  data_time: 0.0023  memory: 680  
2023/10/31 22:13:55 - mmengine - INFO - Epoch(val)  [2][ 8450/21046]    eta: 0:12:48  time: 0.0591  data_time: 0.0022  memory: 680  
2023/10/31 22:13:58 - mmengine - INFO - Epoch(val)  [2][ 8500/21046]    eta: 0:12:45  time: 0.0594  data_time: 0.0022  memory: 680  
2023/10/31 22:14:01 - mmengine - INFO - Epoch(val)  [2][ 8550/21046]    eta: 0:12:42  time: 0.0594  data_time: 0.0022  memory: 680  
2023/10/31 22:14:04 - mmengine - INFO - Epoch(val)  [2][ 8600/21046]    eta: 0:12:38  time: 0.0597  data_time: 0.0024  memory: 680  
2023/10/31 22:14:07 - mmengine - INFO - Epoch(val)  [2][ 8650/21046]    eta: 0:12:35  time: 0.0596  data_time: 0.0025  memory: 680  
2023/10/31 22:14:10 - mmengine - INFO - Epoch(val)  [2][ 8700/21046]    eta: 0:12:32  time: 0.0596  data_time: 0.0022  memory: 680  
2023/10/31 22:14:13 - mmengine - INFO - Epoch(val)  [2][ 8750/21046]    eta: 0:12:29  time: 0.0597  data_time: 0.0022  memory: 680  
2023/10/31 22:14:16 - mmengine - INFO - Epoch(val)  [2][ 8800/21046]    eta: 0:12:26  time: 0.0594  data_time: 0.0022  memory: 680  
2023/10/31 22:14:19 - mmengine - INFO - Epoch(val)  [2][ 8850/21046]    eta: 0:12:23  time: 0.0608  data_time: 0.0022  memory: 680  
2023/10/31 22:14:22 - mmengine - INFO - Epoch(val)  [2][ 8900/21046]    eta: 0:12:20  time: 0.0601  data_time: 0.0029  memory: 680  
2023/10/31 22:14:25 - mmengine - INFO - Epoch(val)  [2][ 8950/21046]    eta: 0:12:16  time: 0.0593  data_time: 0.0022  memory: 680  
2023/10/31 22:14:28 - mmengine - INFO - Epoch(val)  [2][ 9000/21046]    eta: 0:12:13  time: 0.0604  data_time: 0.0024  memory: 680  
2023/10/31 22:14:31 - mmengine - INFO - Epoch(val)  [2][ 9050/21046]    eta: 0:12:10  time: 0.0601  data_time: 0.0023  memory: 680  
2023/10/31 22:14:34 - mmengine - INFO - Epoch(val)  [2][ 9100/21046]    eta: 0:12:07  time: 0.0604  data_time: 0.0022  memory: 680  
2023/10/31 22:14:37 - mmengine - INFO - Epoch(val)  [2][ 9150/21046]    eta: 0:12:04  time: 0.0614  data_time: 0.0023  memory: 680  
2023/10/31 22:14:40 - mmengine - INFO - Epoch(val)  [2][ 9200/21046]    eta: 0:12:01  time: 0.0604  data_time: 0.0023  memory: 680  
2023/10/31 22:14:43 - mmengine - INFO - Epoch(val)  [2][ 9250/21046]    eta: 0:11:58  time: 0.0612  data_time: 0.0031  memory: 680  
2023/10/31 22:14:46 - mmengine - INFO - Epoch(val)  [2][ 9300/21046]    eta: 0:11:55  time: 0.0604  data_time: 0.0022  memory: 680  
2023/10/31 22:14:49 - mmengine - INFO - Epoch(val)  [2][ 9350/21046]    eta: 0:11:52  time: 0.0605  data_time: 0.0025  memory: 680  
2023/10/31 22:14:54 - mmengine - INFO - Epoch(val)  [2][ 9400/21046]    eta: 0:11:51  time: 0.0994  data_time: 0.0398  memory: 680  
2023/10/31 22:14:57 - mmengine - INFO - Epoch(val)  [2][ 9450/21046]    eta: 0:11:48  time: 0.0615  data_time: 0.0026  memory: 680  
2023/10/31 22:15:01 - mmengine - INFO - Epoch(val)  [2][ 9500/21046]    eta: 0:11:45  time: 0.0627  data_time: 0.0029  memory: 680  
2023/10/31 22:15:04 - mmengine - INFO - Epoch(val)  [2][ 9550/21046]    eta: 0:11:42  time: 0.0632  data_time: 0.0034  memory: 680  
2023/10/31 22:15:07 - mmengine - INFO - Epoch(val)  [2][ 9600/21046]    eta: 0:11:40  time: 0.0652  data_time: 0.0036  memory: 680  
2023/10/31 22:15:10 - mmengine - INFO - Epoch(val)  [2][ 9650/21046]    eta: 0:11:37  time: 0.0650  data_time: 0.0031  memory: 680  
2023/10/31 22:15:13 - mmengine - INFO - Epoch(val)  [2][ 9700/21046]    eta: 0:11:34  time: 0.0626  data_time: 0.0027  memory: 680  
2023/10/31 22:15:16 - mmengine - INFO - Epoch(val)  [2][ 9750/21046]    eta: 0:11:31  time: 0.0609  data_time: 0.0027  memory: 680  
2023/10/31 22:15:20 - mmengine - INFO - Epoch(val)  [2][ 9800/21046]    eta: 0:11:28  time: 0.0649  data_time: 0.0033  memory: 680  
2023/10/31 22:15:23 - mmengine - INFO - Epoch(val)  [2][ 9850/21046]    eta: 0:11:25  time: 0.0675  data_time: 0.0039  memory: 680  
2023/10/31 22:15:26 - mmengine - INFO - Epoch(val)  [2][ 9900/21046]    eta: 0:11:22  time: 0.0661  data_time: 0.0057  memory: 680  
2023/10/31 22:15:30 - mmengine - INFO - Epoch(val)  [2][ 9950/21046]    eta: 0:11:19  time: 0.0637  data_time: 0.0040  memory: 680  
2023/10/31 22:15:33 - mmengine - INFO - Epoch(val)  [2][10000/21046]    eta: 0:11:16  time: 0.0621  data_time: 0.0029  memory: 680  
2023/10/31 22:15:36 - mmengine - INFO - Epoch(val)  [2][10050/21046]    eta: 0:11:13  time: 0.0637  data_time: 0.0040  memory: 680  
2023/10/31 22:15:39 - mmengine - INFO - Epoch(val)  [2][10100/21046]    eta: 0:11:11  time: 0.0672  data_time: 0.0058  memory: 680  
2023/10/31 22:15:43 - mmengine - INFO - Epoch(val)  [2][10150/21046]    eta: 0:11:08  time: 0.0679  data_time: 0.0061  memory: 680  
2023/10/31 22:15:46 - mmengine - INFO - Epoch(val)  [2][10200/21046]    eta: 0:11:05  time: 0.0615  data_time: 0.0026  memory: 680  
2023/10/31 22:15:49 - mmengine - INFO - Epoch(val)  [2][10250/21046]    eta: 0:11:02  time: 0.0656  data_time: 0.0037  memory: 680  
2023/10/31 22:15:52 - mmengine - INFO - Epoch(val)  [2][10300/21046]    eta: 0:10:59  time: 0.0635  data_time: 0.0029  memory: 680  
2023/10/31 22:15:56 - mmengine - INFO - Epoch(val)  [2][10350/21046]    eta: 0:10:56  time: 0.0660  data_time: 0.0044  memory: 680  
2023/10/31 22:15:59 - mmengine - INFO - Epoch(val)  [2][10400/21046]    eta: 0:10:53  time: 0.0628  data_time: 0.0034  memory: 680  
2023/10/31 22:16:02 - mmengine - INFO - Epoch(val)  [2][10450/21046]    eta: 0:10:50  time: 0.0638  data_time: 0.0028  memory: 680  
2023/10/31 22:16:05 - mmengine - INFO - Epoch(val)  [2][10500/21046]    eta: 0:10:47  time: 0.0610  data_time: 0.0031  memory: 680  
2023/10/31 22:16:08 - mmengine - INFO - Epoch(val)  [2][10550/21046]    eta: 0:10:45  time: 0.0684  data_time: 0.0067  memory: 680  
2023/10/31 22:16:12 - mmengine - INFO - Epoch(val)  [2][10600/21046]    eta: 0:10:42  time: 0.0643  data_time: 0.0033  memory: 680  
2023/10/31 22:16:15 - mmengine - INFO - Epoch(val)  [2][10650/21046]    eta: 0:10:39  time: 0.0658  data_time: 0.0045  memory: 680  
2023/10/31 22:16:18 - mmengine - INFO - Epoch(val)  [2][10700/21046]    eta: 0:10:36  time: 0.0642  data_time: 0.0035  memory: 680  
2023/10/31 22:16:21 - mmengine - INFO - Epoch(val)  [2][10750/21046]    eta: 0:10:33  time: 0.0661  data_time: 0.0050  memory: 680  
2023/10/31 22:16:25 - mmengine - INFO - Epoch(val)  [2][10800/21046]    eta: 0:10:30  time: 0.0626  data_time: 0.0033  memory: 680  
2023/10/31 22:16:28 - mmengine - INFO - Epoch(val)  [2][10850/21046]    eta: 0:10:27  time: 0.0623  data_time: 0.0032  memory: 680  
2023/10/31 22:16:31 - mmengine - INFO - Epoch(val)  [2][10900/21046]    eta: 0:10:24  time: 0.0616  data_time: 0.0032  memory: 680  
2023/10/31 22:16:34 - mmengine - INFO - Epoch(val)  [2][10950/21046]    eta: 0:10:21  time: 0.0673  data_time: 0.0056  memory: 680  
2023/10/31 22:16:37 - mmengine - INFO - Epoch(val)  [2][11000/21046]    eta: 0:10:18  time: 0.0632  data_time: 0.0030  memory: 680  
2023/10/31 22:16:40 - mmengine - INFO - Epoch(val)  [2][11050/21046]    eta: 0:10:15  time: 0.0629  data_time: 0.0030  memory: 680  
2023/10/31 22:16:44 - mmengine - INFO - Epoch(val)  [2][11100/21046]    eta: 0:10:12  time: 0.0636  data_time: 0.0044  memory: 680  
2023/10/31 22:16:47 - mmengine - INFO - Epoch(val)  [2][11150/21046]    eta: 0:10:09  time: 0.0666  data_time: 0.0035  memory: 680  
2023/10/31 22:16:50 - mmengine - INFO - Epoch(val)  [2][11200/21046]    eta: 0:10:06  time: 0.0630  data_time: 0.0041  memory: 680  
2023/10/31 22:16:53 - mmengine - INFO - Epoch(val)  [2][11250/21046]    eta: 0:10:03  time: 0.0649  data_time: 0.0029  memory: 680  
2023/10/31 22:16:57 - mmengine - INFO - Epoch(val)  [2][11300/21046]    eta: 0:10:00  time: 0.0659  data_time: 0.0044  memory: 680  
2023/10/31 22:17:00 - mmengine - INFO - Epoch(val)  [2][11350/21046]    eta: 0:09:57  time: 0.0645  data_time: 0.0037  memory: 680  
2023/10/31 22:17:03 - mmengine - INFO - Epoch(val)  [2][11400/21046]    eta: 0:09:54  time: 0.0636  data_time: 0.0030  memory: 680  
2023/10/31 22:17:06 - mmengine - INFO - Epoch(val)  [2][11450/21046]    eta: 0:09:51  time: 0.0637  data_time: 0.0033  memory: 680  
2023/10/31 22:17:10 - mmengine - INFO - Epoch(val)  [2][11500/21046]    eta: 0:09:48  time: 0.0646  data_time: 0.0044  memory: 680  
2023/10/31 22:17:13 - mmengine - INFO - Epoch(val)  [2][11550/21046]    eta: 0:09:45  time: 0.0613  data_time: 0.0025  memory: 680  
2023/10/31 22:17:16 - mmengine - INFO - Epoch(val)  [2][11600/21046]    eta: 0:09:42  time: 0.0672  data_time: 0.0060  memory: 680  
2023/10/31 22:17:19 - mmengine - INFO - Epoch(val)  [2][11650/21046]    eta: 0:09:39  time: 0.0627  data_time: 0.0036  memory: 680  
2023/10/31 22:17:22 - mmengine - INFO - Epoch(val)  [2][11700/21046]    eta: 0:09:36  time: 0.0627  data_time: 0.0026  memory: 680  
2023/10/31 22:17:26 - mmengine - INFO - Epoch(val)  [2][11750/21046]    eta: 0:09:33  time: 0.0653  data_time: 0.0035  memory: 680  
2023/10/31 22:17:29 - mmengine - INFO - Epoch(val)  [2][11800/21046]    eta: 0:09:30  time: 0.0652  data_time: 0.0039  memory: 680  
2023/10/31 22:17:32 - mmengine - INFO - Epoch(val)  [2][11850/21046]    eta: 0:09:27  time: 0.0609  data_time: 0.0029  memory: 680  
2023/10/31 22:17:35 - mmengine - INFO - Epoch(val)  [2][11900/21046]    eta: 0:09:24  time: 0.0654  data_time: 0.0050  memory: 680  
2023/10/31 22:17:38 - mmengine - INFO - Epoch(val)  [2][11950/21046]    eta: 0:09:21  time: 0.0630  data_time: 0.0032  memory: 680  
2023/10/31 22:17:42 - mmengine - INFO - Epoch(val)  [2][12000/21046]    eta: 0:09:18  time: 0.0640  data_time: 0.0043  memory: 680  
2023/10/31 22:17:45 - mmengine - INFO - Epoch(val)  [2][12050/21046]    eta: 0:09:15  time: 0.0637  data_time: 0.0042  memory: 680  
2023/10/31 22:17:48 - mmengine - INFO - Epoch(val)  [2][12100/21046]    eta: 0:09:12  time: 0.0640  data_time: 0.0036  memory: 680  
2023/10/31 22:17:51 - mmengine - INFO - Epoch(val)  [2][12150/21046]    eta: 0:09:09  time: 0.0665  data_time: 0.0050  memory: 680  
2023/10/31 22:17:55 - mmengine - INFO - Epoch(val)  [2][12200/21046]    eta: 0:09:06  time: 0.0651  data_time: 0.0044  memory: 680  
2023/10/31 22:17:58 - mmengine - INFO - Epoch(val)  [2][12250/21046]    eta: 0:09:03  time: 0.0618  data_time: 0.0026  memory: 680  
2023/10/31 22:18:01 - mmengine - INFO - Epoch(val)  [2][12300/21046]    eta: 0:09:00  time: 0.0632  data_time: 0.0032  memory: 680  
2023/10/31 22:18:04 - mmengine - INFO - Epoch(val)  [2][12350/21046]    eta: 0:08:57  time: 0.0642  data_time: 0.0043  memory: 680  
2023/10/31 22:18:07 - mmengine - INFO - Epoch(val)  [2][12400/21046]    eta: 0:08:54  time: 0.0648  data_time: 0.0034  memory: 680  
2023/10/31 22:18:10 - mmengine - INFO - Epoch(val)  [2][12450/21046]    eta: 0:08:51  time: 0.0627  data_time: 0.0035  memory: 680  
2023/10/31 22:18:14 - mmengine - INFO - Epoch(val)  [2][12500/21046]    eta: 0:08:48  time: 0.0616  data_time: 0.0031  memory: 680  
2023/10/31 22:18:17 - mmengine - INFO - Epoch(val)  [2][12550/21046]    eta: 0:08:45  time: 0.0638  data_time: 0.0044  memory: 680  
2023/10/31 22:18:20 - mmengine - INFO - Epoch(val)  [2][12600/21046]    eta: 0:08:42  time: 0.0683  data_time: 0.0053  memory: 680  
2023/10/31 22:18:23 - mmengine - INFO - Epoch(val)  [2][12650/21046]    eta: 0:08:39  time: 0.0635  data_time: 0.0034  memory: 680  
2023/10/31 22:18:26 - mmengine - INFO - Epoch(val)  [2][12700/21046]    eta: 0:08:36  time: 0.0608  data_time: 0.0026  memory: 680  
2023/10/31 22:18:30 - mmengine - INFO - Epoch(val)  [2][12750/21046]    eta: 0:08:33  time: 0.0654  data_time: 0.0047  memory: 680  
2023/10/31 22:18:33 - mmengine - INFO - Epoch(val)  [2][12800/21046]    eta: 0:08:30  time: 0.0659  data_time: 0.0038  memory: 680  
2023/10/31 22:18:36 - mmengine - INFO - Epoch(val)  [2][12850/21046]    eta: 0:08:27  time: 0.0614  data_time: 0.0025  memory: 680  
2023/10/31 22:18:39 - mmengine - INFO - Epoch(val)  [2][12900/21046]    eta: 0:08:24  time: 0.0629  data_time: 0.0031  memory: 680  
2023/10/31 22:18:42 - mmengine - INFO - Epoch(val)  [2][12950/21046]    eta: 0:08:21  time: 0.0629  data_time: 0.0029  memory: 680  
2023/10/31 22:18:45 - mmengine - INFO - Epoch(val)  [2][13000/21046]    eta: 0:08:18  time: 0.0620  data_time: 0.0029  memory: 680  
2023/10/31 22:18:49 - mmengine - INFO - Epoch(val)  [2][13050/21046]    eta: 0:08:15  time: 0.0629  data_time: 0.0040  memory: 680  
2023/10/31 22:18:52 - mmengine - INFO - Epoch(val)  [2][13100/21046]    eta: 0:08:12  time: 0.0619  data_time: 0.0036  memory: 680  
2023/10/31 22:18:55 - mmengine - INFO - Epoch(val)  [2][13150/21046]    eta: 0:08:09  time: 0.0640  data_time: 0.0045  memory: 680  
2023/10/31 22:18:58 - mmengine - INFO - Epoch(val)  [2][13200/21046]    eta: 0:08:05  time: 0.0621  data_time: 0.0029  memory: 680  
2023/10/31 22:19:01 - mmengine - INFO - Epoch(val)  [2][13250/21046]    eta: 0:08:02  time: 0.0630  data_time: 0.0028  memory: 680  
2023/10/31 22:19:05 - mmengine - INFO - Epoch(val)  [2][13300/21046]    eta: 0:07:59  time: 0.0663  data_time: 0.0036  memory: 680  
2023/10/31 22:19:08 - mmengine - INFO - Epoch(val)  [2][13350/21046]    eta: 0:07:56  time: 0.0655  data_time: 0.0044  memory: 680  
2023/10/31 22:19:11 - mmengine - INFO - Epoch(val)  [2][13400/21046]    eta: 0:07:53  time: 0.0632  data_time: 0.0029  memory: 680  
2023/10/31 22:19:14 - mmengine - INFO - Epoch(val)  [2][13450/21046]    eta: 0:07:50  time: 0.0646  data_time: 0.0040  memory: 680  
2023/10/31 22:19:17 - mmengine - INFO - Epoch(val)  [2][13500/21046]    eta: 0:07:47  time: 0.0639  data_time: 0.0032  memory: 680  
2023/10/31 22:19:21 - mmengine - INFO - Epoch(val)  [2][13550/21046]    eta: 0:07:44  time: 0.0631  data_time: 0.0030  memory: 680  
2023/10/31 22:19:24 - mmengine - INFO - Epoch(val)  [2][13600/21046]    eta: 0:07:41  time: 0.0640  data_time: 0.0029  memory: 680  
2023/10/31 22:19:27 - mmengine - INFO - Epoch(val)  [2][13650/21046]    eta: 0:07:38  time: 0.0671  data_time: 0.0049  memory: 680  
2023/10/31 22:19:31 - mmengine - INFO - Epoch(val)  [2][13700/21046]    eta: 0:07:35  time: 0.0670  data_time: 0.0069  memory: 680  
2023/10/31 22:19:34 - mmengine - INFO - Epoch(val)  [2][13750/21046]    eta: 0:07:32  time: 0.0665  data_time: 0.0046  memory: 680  
2023/10/31 22:19:37 - mmengine - INFO - Epoch(val)  [2][13800/21046]    eta: 0:07:29  time: 0.0655  data_time: 0.0043  memory: 680  
2023/10/31 22:19:40 - mmengine - INFO - Epoch(val)  [2][13850/21046]    eta: 0:07:26  time: 0.0624  data_time: 0.0031  memory: 680  
2023/10/31 22:19:43 - mmengine - INFO - Epoch(val)  [2][13900/21046]    eta: 0:07:23  time: 0.0629  data_time: 0.0031  memory: 680  
2023/10/31 22:19:47 - mmengine - INFO - Epoch(val)  [2][13950/21046]    eta: 0:07:20  time: 0.0633  data_time: 0.0041  memory: 680  
2023/10/31 22:19:50 - mmengine - INFO - Epoch(val)  [2][14000/21046]    eta: 0:07:17  time: 0.0629  data_time: 0.0032  memory: 680  
2023/10/31 22:19:53 - mmengine - INFO - Epoch(val)  [2][14050/21046]    eta: 0:07:14  time: 0.0633  data_time: 0.0027  memory: 680  
2023/10/31 22:19:56 - mmengine - INFO - Epoch(val)  [2][14100/21046]    eta: 0:07:11  time: 0.0658  data_time: 0.0043  memory: 680  
2023/10/31 22:19:59 - mmengine - INFO - Epoch(val)  [2][14150/21046]    eta: 0:07:08  time: 0.0623  data_time: 0.0035  memory: 680  
2023/10/31 22:20:03 - mmengine - INFO - Epoch(val)  [2][14200/21046]    eta: 0:07:05  time: 0.0677  data_time: 0.0051  memory: 680  
2023/10/31 22:20:06 - mmengine - INFO - Epoch(val)  [2][14250/21046]    eta: 0:07:02  time: 0.0642  data_time: 0.0046  memory: 680  
2023/10/31 22:20:09 - mmengine - INFO - Epoch(val)  [2][14300/21046]    eta: 0:06:59  time: 0.0647  data_time: 0.0034  memory: 680  
2023/10/31 22:20:13 - mmengine - INFO - Epoch(val)  [2][14350/21046]    eta: 0:06:56  time: 0.0665  data_time: 0.0052  memory: 680  
2023/10/31 22:20:16 - mmengine - INFO - Epoch(val)  [2][14400/21046]    eta: 0:06:53  time: 0.0622  data_time: 0.0033  memory: 680  
2023/10/31 22:20:19 - mmengine - INFO - Epoch(val)  [2][14450/21046]    eta: 0:06:50  time: 0.0658  data_time: 0.0041  memory: 680  
2023/10/31 22:20:22 - mmengine - INFO - Epoch(val)  [2][14500/21046]    eta: 0:06:46  time: 0.0628  data_time: 0.0035  memory: 680  
2023/10/31 22:20:25 - mmengine - INFO - Epoch(val)  [2][14550/21046]    eta: 0:06:43  time: 0.0654  data_time: 0.0039  memory: 680  
2023/10/31 22:20:29 - mmengine - INFO - Epoch(val)  [2][14600/21046]    eta: 0:06:40  time: 0.0636  data_time: 0.0036  memory: 680  
2023/10/31 22:20:32 - mmengine - INFO - Epoch(val)  [2][14650/21046]    eta: 0:06:37  time: 0.0675  data_time: 0.0042  memory: 680  
2023/10/31 22:20:35 - mmengine - INFO - Epoch(val)  [2][14700/21046]    eta: 0:06:34  time: 0.0644  data_time: 0.0037  memory: 680  
2023/10/31 22:20:39 - mmengine - INFO - Epoch(val)  [2][14750/21046]    eta: 0:06:31  time: 0.0668  data_time: 0.0060  memory: 680  
2023/10/31 22:20:42 - mmengine - INFO - Epoch(val)  [2][14800/21046]    eta: 0:06:28  time: 0.0622  data_time: 0.0025  memory: 680  
2023/10/31 22:20:45 - mmengine - INFO - Epoch(val)  [2][14850/21046]    eta: 0:06:25  time: 0.0667  data_time: 0.0056  memory: 680  
2023/10/31 22:20:48 - mmengine - INFO - Epoch(val)  [2][14900/21046]    eta: 0:06:22  time: 0.0636  data_time: 0.0037  memory: 680  
2023/10/31 22:20:51 - mmengine - INFO - Epoch(val)  [2][14950/21046]    eta: 0:06:19  time: 0.0620  data_time: 0.0029  memory: 680  
2023/10/31 22:20:54 - mmengine - INFO - Epoch(val)  [2][15000/21046]    eta: 0:06:16  time: 0.0631  data_time: 0.0035  memory: 680  
2023/10/31 22:20:58 - mmengine - INFO - Epoch(val)  [2][15050/21046]    eta: 0:06:13  time: 0.0639  data_time: 0.0037  memory: 680  
2023/10/31 22:21:01 - mmengine - INFO - Epoch(val)  [2][15100/21046]    eta: 0:06:10  time: 0.0642  data_time: 0.0039  memory: 680  
2023/10/31 22:21:04 - mmengine - INFO - Epoch(val)  [2][15150/21046]    eta: 0:06:07  time: 0.0664  data_time: 0.0044  memory: 680  
2023/10/31 22:21:07 - mmengine - INFO - Epoch(val)  [2][15200/21046]    eta: 0:06:04  time: 0.0619  data_time: 0.0027  memory: 680  
2023/10/31 22:21:11 - mmengine - INFO - Epoch(val)  [2][15250/21046]    eta: 0:06:00  time: 0.0649  data_time: 0.0034  memory: 680  
2023/10/31 22:21:14 - mmengine - INFO - Epoch(val)  [2][15300/21046]    eta: 0:05:57  time: 0.0670  data_time: 0.0032  memory: 680  
2023/10/31 22:21:17 - mmengine - INFO - Epoch(val)  [2][15350/21046]    eta: 0:05:54  time: 0.0622  data_time: 0.0034  memory: 680  
2023/10/31 22:21:20 - mmengine - INFO - Epoch(val)  [2][15400/21046]    eta: 0:05:51  time: 0.0626  data_time: 0.0030  memory: 680  
2023/10/31 22:21:24 - mmengine - INFO - Epoch(val)  [2][15450/21046]    eta: 0:05:48  time: 0.0657  data_time: 0.0044  memory: 680  
2023/10/31 22:21:27 - mmengine - INFO - Epoch(val)  [2][15500/21046]    eta: 0:05:45  time: 0.0630  data_time: 0.0031  memory: 680  
2023/10/31 22:21:30 - mmengine - INFO - Epoch(val)  [2][15550/21046]    eta: 0:05:42  time: 0.0649  data_time: 0.0035  memory: 680  
2023/10/31 22:21:33 - mmengine - INFO - Epoch(val)  [2][15600/21046]    eta: 0:05:39  time: 0.0656  data_time: 0.0044  memory: 680  
2023/10/31 22:21:36 - mmengine - INFO - Epoch(val)  [2][15650/21046]    eta: 0:05:36  time: 0.0649  data_time: 0.0051  memory: 680  
2023/10/31 22:21:40 - mmengine - INFO - Epoch(val)  [2][15700/21046]    eta: 0:05:33  time: 0.0632  data_time: 0.0030  memory: 680  
2023/10/31 22:21:43 - mmengine - INFO - Epoch(val)  [2][15750/21046]    eta: 0:05:30  time: 0.0639  data_time: 0.0030  memory: 680  
2023/10/31 22:21:46 - mmengine - INFO - Epoch(val)  [2][15800/21046]    eta: 0:05:27  time: 0.0644  data_time: 0.0036  memory: 680  
2023/10/31 22:21:49 - mmengine - INFO - Epoch(val)  [2][15850/21046]    eta: 0:05:23  time: 0.0630  data_time: 0.0030  memory: 680  
2023/10/31 22:21:52 - mmengine - INFO - Epoch(val)  [2][15900/21046]    eta: 0:05:20  time: 0.0633  data_time: 0.0035  memory: 680  
2023/10/31 22:21:56 - mmengine - INFO - Epoch(val)  [2][15950/21046]    eta: 0:05:17  time: 0.0695  data_time: 0.0052  memory: 680  
2023/10/31 22:21:59 - mmengine - INFO - Epoch(val)  [2][16000/21046]    eta: 0:05:14  time: 0.0635  data_time: 0.0035  memory: 680  
2023/10/31 22:22:02 - mmengine - INFO - Epoch(val)  [2][16050/21046]    eta: 0:05:11  time: 0.0627  data_time: 0.0026  memory: 680  
2023/10/31 22:22:05 - mmengine - INFO - Epoch(val)  [2][16100/21046]    eta: 0:05:08  time: 0.0651  data_time: 0.0038  memory: 680  
2023/10/31 22:22:09 - mmengine - INFO - Epoch(val)  [2][16150/21046]    eta: 0:05:05  time: 0.0610  data_time: 0.0027  memory: 680  
2023/10/31 22:22:12 - mmengine - INFO - Epoch(val)  [2][16200/21046]    eta: 0:05:02  time: 0.0662  data_time: 0.0045  memory: 680  
2023/10/31 22:22:15 - mmengine - INFO - Epoch(val)  [2][16250/21046]    eta: 0:04:59  time: 0.0651  data_time: 0.0046  memory: 680  
2023/10/31 22:22:18 - mmengine - INFO - Epoch(val)  [2][16300/21046]    eta: 0:04:56  time: 0.0631  data_time: 0.0035  memory: 680  
2023/10/31 22:22:21 - mmengine - INFO - Epoch(val)  [2][16350/21046]    eta: 0:04:53  time: 0.0632  data_time: 0.0040  memory: 680  
2023/10/31 22:22:25 - mmengine - INFO - Epoch(val)  [2][16400/21046]    eta: 0:04:49  time: 0.0622  data_time: 0.0037  memory: 680  
2023/10/31 22:22:28 - mmengine - INFO - Epoch(val)  [2][16450/21046]    eta: 0:04:46  time: 0.0619  data_time: 0.0026  memory: 680  
2023/10/31 22:22:31 - mmengine - INFO - Epoch(val)  [2][16500/21046]    eta: 0:04:43  time: 0.0628  data_time: 0.0029  memory: 680  
